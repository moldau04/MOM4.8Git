
@{
    ViewData["Title"] = " List Page";
    Layout = "~/Views/Shared/MOMLayout.cshtml";
}

<!--Grid Control-->
<link href="~/MOMUI/Design/css/grid.css" rel="stylesheet" />
@*<%--Calendar CSS--%>*@
<link href="~/MOMUI/Design/css/pikaday.css" rel="stylesheet" />

<script type="text/javascript">
    function CheckDelete() {
        var result = false;
        var gridCount = $("#RadGrid_SafetyTest tbody tr input[type='checkbox']:checked").length;
        console.log(gridCount);
        result = gridCount > 0;

        if (result == true) {
            return confirm('Do you really want to delete this ?');
        }
        else {
            ShowMessage('Please select a record to delete.', 'warning');
            return false;
        }
    }

    function CheckAssign() {
        var result = false;
        var gridCount = $("#RadGrid_SafetyTest tbody tr input[type='checkbox']:checked").length;
        console.log(gridCount);
        result = gridCount > 0;

        if (result == true) {
            return true;
        }
        else {
            ShowMessage('Please select a record to assign.', 'warning');
            return false;
        }
    }

    function ShowMessage(message, messageType) {
        noty({
            text: message,
            type: messageType,
            layout: 'topCenter',
            closeOnSelfClick: false,
            timeout: true,
            theme: 'noty_theme_default',
            closable: true,
            timeout: 3000
        });
    }
    function SetDefaultDateRangeCss() {
        debugger
        CssClearLabel();
        $("#lblWeek").addClass("labelactive");
        $("#hdnRcvPymtSelectDtRange").val("Week");
    }

</script>
<script>
    function pageLoad() {
        $('label input[type=radio]').click(function () {
            $('input[name="rdCal"]').each(function () {
                $(this.parentNode).toggleClass('labelactive', this.checked);
            });
        });
        $("#txtStartDate").pikaday({
            firstDay: 0,
            format: 'MM/DD/YYYY',
            minDate: new Date(1900, 1, 1),
            maxDate: new Date(2100, 12, 31),
            yearRange: [1900, 2100]
        });
        $("#txtEndDate").pikaday({
            firstDay: 0,
            format: 'MM/DD/YYYY',
            minDate: new Date(1900, 1, 1),
            maxDate: new Date(2100, 12, 31),
            yearRange: [1900, 2100]
        });

        var grid = $find("#RadGrid_SafetyTest");
        var columns = grid.get_masterTableView().get_columns();
        for (var i = 0; i < columns.length; i++) {
            columns[i].resizeToFit(false, true);
        }


    }
    function ShowRestoreGridSettingsButton() {
        debugger
        $("#lbSaveGridSettings").css('display', 'none');
        $("#lbRestoreGridSettings").css('display', 'block');
    }
    function OnGridCreated(sender, args) {
        debugger
        var frozenScroll = $get(sender.get_id() + "_Frozen");
        var allColumns = sender.get_masterTableView().get_columns();
        var scrollLeftOffset = 0;
        var allColumnsWidth = new Array;
        var grid = sender.get_element();
        for (var i = 0; i < allColumns.length; i++) {
            allColumnsWidth[i] = allColumns[i].get_element().offsetWidth;
        }

        $get(sender.get_id() + "_GridData").onscroll = function (e) {
            for (var i = 0; i < allColumns.length; i++) {
                if (!allColumns[i].get_visible()) {
                    scrollLeftOffset += allColumnsWidth[i];
                }
                if ($telerik.isIE7) {
                    var thisColumn = grid.getElementsByTagName("colgroup")[0].getElementsByTagName("col")[i];
                    if (thisColumn.style.display == "none") {
                        scrollLeftOffset += parseInt(thisColumn.style.width);
                    }
                }
            }
            var thisScrollLeft = this.scrollLeft;
            if (frozenScroll != null) {
                if (thisScrollLeft > 0)
                    frozenScroll.scrollLeft = thisScrollLeft + scrollLeftOffset + 300;
                this.scrollLeft = 0;
            }

            scrollLeftOffset = 0;
        };
    }

    function headerMenuShowing(sender, args) {
        var session = '<% Session["COPer"] %>';
        var menu = args.get_menu();

        for (var i = 0; i < menu.get_items().get_count(); i++) {
            var item = menu.get_items().getItem(i);
            if (item.get_value() != 'ColumnsContainer') {
                item.get_element().style.display = 'none';
            }
        }

        var columnsItem = menu.findItemByText("Columns");
        columnsItem.get_items().getItem(0).get_element().style.display = "none";

        //if (session != 1) {
        //    columnsItem.get_items().getItem(7).get_element().style.display = "none";
        //}
    }

    function ColumnSettingsChange(menu, args) {
        $("#lbSaveGridSettings").css('display', 'block');
        $("#lbRestoreGridSettings").css('display', 'none');
    }

    function GridCommand(sender, args) {
        if (args.get_commandName() == "Sort") {
            ColumnSettingsChange();
        }
    }

    function SaveGridSettings() {
        $("#lnkSaveGridSettings").click();
        $("#lbSaveGridSettings").css('display', 'none');
        $("#lbRestoreGridSettings").css('display', 'block');
    }

    function RestoreGridSettings() {
        $("#lnkRestoreGridSettings").click();
        $("#lbRestoreGridSettings").css('display', 'none');
        $("#lbSaveGridSettings").css('display', 'none');
    }
</script>
<style type="text/css">
    .RadGrid_SafetyTest [id$='_PageSizeComboBox'] {
        width: 63px !important;
    }

    .RadGrid_SafetyTest [id$='_AddNewRecordButton'] {
        display: none;
    }

    .RadGrid_Bootstrap .rgFilterRow .riTextBox {
        border: none !important;
        border-bottom: solid 1px !important;
        border-radius: 0 !important;
    }

    .RadPicker .rcSelect {
        border: none !important;
        height: 30px;
    }

    #overlay {
        position: fixed; /* Sit on top of the page content */
        display: none; /* Hidden by default */
        width: 100%; /* Full width (cover the whole page) */
        height: 100%; /* Full height (cover the whole page) */
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5); /* Black background with opacity */
        z-index: 1000000; /* Specify a stack order in case you're using a different order for other elements */
        cursor: pointer; /* Add a pointer on hover */
    }

    .labelButton {
        padding: 5px 10px 5px 10px;
        font-size: 0.9em;
        float: left;
        line-height: 19px !important;
        border-radius: 3px;
        background-color: #1C5FB1 !important;
        color: #fff !important;
        margin: 3px -9px;
        cursor: pointer;
    }
</style>
<!--start container-->

<div class="divbutton-container">
    <div id="divButtons">
        <div id="breadcrumbs-wrapper">
            <header>
                <div class="container row-color-grey">
                    <div class="row">
                        <div class="col s12 m12 l12">
                            <div class="row">
                                <div class="page-title"><i class="mdi-action-info"></i>&nbsp;Safety Tests</div>
                                <div ID="pnlGridButtons">
                                    <div class="buttonContainer">
                                        <div class="btnlinks">
                                            <a ID="lnkAddnew" href="@Url.Action("Index","AddSafetyTests")">Add</a>
                                        </div>
                                        <div class="btnlinks">
                                            <a ID="btnEdit">Edit</a>
                                        </div>
                                        <div class="btnlinks menuAction">
                                            <a onclick="DropdownMenu()" class="dropbtn" style="cursor: pointer;">
                                                Actions
                                            </a>
                                        </div>
                                        <ul id="drpMenu" class="nomgn hideMenu menuList">
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="lnkDelete" onclick="return CheckDelete();">Delete</a>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="lnkExcel">Export to Excel</a>

                                                </div>
                                            </li>
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="lnkAssignTicket" onclick="return CheckAssign();">Assign</a>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="LnkGenerateProposal">Generate Proposal</a>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="lnkEmail" onclick="return confirm('Are you sure you want to send email?')">Email</a>
                                                </div>
                                            </li>
                                            <li>
                                                <div class="btnlinks">
                                                    <a ID="lnkRestoreGridSettings" CausesValidation="False"
                                                       Style="display: block">Restore Grid</a>
                                                </div>
                                                <div class="btnlinks">
                                                    <a ID="lnkSaveGridSettings" CausesValidation="False"
                                                       Style="display: block">Save Grid</a>
                                                </div>

                                                <label id="lbSaveGridSettings" class="labelButton" tooltip="Save Grid Settings" style="display: block; margin-left: 1px; margin-top: 7px;">
                                                    <input type="radio" id="rdSaveGridSettings" onclick="SaveGridSettings();" />
                                                    Save Grid
                                                </label>
                                                <label id="lbRestoreGridSettings" class="labelButton" tooltip="Restore Default Settings for Grid" style="display: none">
                                                    <input type="radio" id="rdRestoreGridSettings" onclick="RestoreGridSettings();" />
                                                    Restore Grid
                                                </label>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="btnclosewrap">
                                    <a CssClass="icon-closed" ID="lnkClose" CausesValidation="false" ToolTip="Close"
                                       TabIndex="39"><i class="mdi-content-clear"></i></a>
                                </div>

                                <div class="rght-content">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </header>
        </div>
    </div>
</div>

<div class="container" style="text-align: center;">
    <div class="row">
        <div class="srchpane">
            <div class="srchpaneinner">
                <div class="srchtitle" style="padding-left: 15px;">
                    Date
                </div>
                <div class="srchinputwrap">
                    <input type="text" ID="txtStartDate" class="datepicker_mom" />
                </div>
                <div class="srchinputwrap">
                    <input type="text" ID="txtEndDate" class="datepicker_mom" />
                </div>

                <div class="srchinputwrap pd-negatenw">
                    <ul class="tabselect accrd-tabselect" id="testradiobutton">
                        <li>
                            <a AutoPostBack="False" ID="decDate" onclick="dec_date('dec','ctl00_ContentPlaceHolder1_txtStartDate','ctl00_ContentPlaceHolder1_txtEndDate','rdCal');return false;"><i class='mdi-hardware-keyboard-arrow-left'></i></a>
                        </li>
                        <li>
                            <label id="lblDay">
                                <input type="radio" id="rdDay" name="rdCal" value="rdDay" onclick="SelectDate('Day')" />
                                Day
                            </label>
                        </li>
                        <li>
                            <label id="lblWeek">
                                <input type="radio" id="rdWeek" name="rdCal" value="rdWeek" onclick="SelectDate('Week')" />
                                Week
                            </label>
                        </li>
                        <li>
                            <label id="lblMonth">
                                <input type="radio" id="rdMonth" name="rdCal" value="rdMonth" onclick="SelectDate('Month')" />
                                Month
                            </label>
                        </li>
                        <li>
                            <label id="lblQuarter">
                                <input type="radio" id="rdQuarter" name="rdCal" value="rdQuarter" onclick="SelectDate('Quarter')" />
                                Quarter
                            </label>
                        </li>
                        <li>
                            <label id="lblYear">
                                <input type="radio" id="rdYear" name="rdCal" value="rdYear" onclick="SelectDate('Year')" />
                                Year
                            </label>
                        </li>
                        <li>
                            <a ID="incDate" onclick="dec_date('inc','ctl00_ContentPlaceHolder1_txtStartDate','ctl00_ContentPlaceHolder1_txtEndDate','rdCal');return false"><i class='mdi-hardware-keyboard-arrow-right'></i></a>
                        </li>
                    </ul>
                </div>
                <div class="col lblsz2 lblszfloat">
                    <div class="row">
                        <span class="tro trost">
                            <span class="css-checkbox">
                                <input type="checkbox" ID="lnkChk" />
                            </span>
                            <label for="lnkChk" style="font-size:14px">Incl. Assigned</label>
                        </span>
                        <span class="tro trost">
                            <a ID="lnkClear">Clear </a>
                        </span>
                        <span class="tro trost">
                            <a ID="lnkShowAll">Show All </a>
                        </span>
                        <span class="tro trost">
                            <label ID="lblRecordCount" style="font-size:14px">0 Record(s) found.</label>
                        </span>
                    </div>
                </div>
            </div>

            <div class="srchpaneinner">
                <div class="srchtitle srchtitlecustomwidth" style="padding-left: 15px;">
                    Search
                </div>
                <div class="srchinputwrap">
                    <select ID="ddlSearch" class="browser-default selectst" Style="min-width: 180px !important;" ClientIDMode="Static">
                        <option>Select</option>
                    </select>
                </div>

                <div class="srchinputwrap">
                    <input type="text" ID="txtSearch" class="pd-negate srchcstm" placeholder="Search for Item, description" ToolTip="Search for Item, description" />
                </div>

                <div class="srchtitle srchtitlecustomwidth" style="padding-left: 15px;">
                    Test Type
                </div>

                <div class="srchinputwrap">
                    <select ID="ddlTestTypes"
                            class="browser-default selectsml selectst" Style="min-width: 200px !important;"
                            ClientIDMode="Static">
                        <option>Select</option>
                    </select>
                </div>
                <div class="srchtitle srchtitlecustomwidth" style="padding-left: 15px;">
                    Proposal
                </div>
                <div class="srchinputwrap">
                    <select ID="ddlProposal"
                            class="browser-default selectsml selectst" Style="min-width: 30px !important;"
                            ClientIDMode="Static">
                        <option Value="ALL">All</option>
                        <option Value="Yes">Yes</option>
                        <option Value="No">No</option>
                    </select>
                </div>
                <div class="srchinputwrap srchclr btnlinksicon">
                    <a ID="lnkSearch" CausesValidation="false">
                        <i class="mdi-action-search"></i>
                    </a>
                </div>
            </div>
        </div>

        <div class="grid_container">
            <div class="form-section-row" style="margin-bottom: 0 !important;">
                <div class="RadGrid RadGrid_Material">


                </div>
            </div>
        </div>
    </div>
</div>

<!--end container-->

@Html.Hidden("hdnCssActive", "1")
@Html.Hidden("hdnRcvPymtSelectDtRange", "Week")
@Html.Hidden("isShowAll", "0")

<div style="display: none">
    <input type="button" ID="btnProcessDownload" />
    @Html.Hidden("hdnDownloadID", "0")
    @Html.Hidden("hdnDownloadType", "0")
</div>

<script type="text/javascript">
    function CssClearLabel() {
        $("#lblDay").removeClass("labelactive");
        $("#lblWeek").removeClass("labelactive");
        $("#lblMonth").removeClass("labelactive");
        $("#lblQuarter").removeClass("labelactive");
        $("#lblYear").removeClass("labelactive");
    }
    function SetActiveDateRangeCss(rangeName) {
        debugger
        CssClearLabel();
        if (rangeName == "Day")
            $("#lblDay").addClass("labelactive");
        else if (rangeName == "Week")
            $("#lblWeek").addClass("labelactive");
        else if (rangeName == "Month")
            $("#lblMonth").addClass("labelactive");
        else if (rangeName == "Quarter")
            $("#lblQuarter").addClass("labelactive");
        else if (rangeName == "Year")
            $("#lblYear").addClass("labelactive");
        $("#hdnRcvPymtSelectDtRange").val(rangeName);
    }

    $(document).ready(function () {
        $('label input[type=radio]').click(function () {
            $('input[name="' + this.name + '"]').each(function () {
                $(this.parentNode).toggleClass('labelactive', this.checked);
            });
        });
        if (typeof (Storage) !== "undefined") {
            debugger
            // Retrieve
            var SesVar = '<%=Convert.ToString(Session["lblSafetyTestActive"])%>';
            var val;
            //val = localStorage.getItem("hdnReceivePODate");
            val = $("#hdnRcvPymtSelectDtRange").val();
            CssClearLabel();

            if (val == 'Day') {
                $("#lblDay").addClass("labelactive");
                $("#rdDay").css('checked', true);
            }
            else if (val == 'Week') {

                $("#lblWeek").addClass("labelactive");
                $("#rdWeek").css('checked', true);
            }
            else if (val == 'Month') {

                $("#lblMonth").addClass("labelactive");
                $("#rdMonth").css('checked', true);
            }
            else if (val == 'Quarter') {

                $("#lblQuarter").addClass("labelactive");
                $("#rdQuarter").css('checked', true);
            }
            else if (val == 'Year') {

                $("#lblYear").addClass("labelactive");
                $("#rdYear").css('checked', true);
            }
            else {
                debugger
                if (SesVar != "") SetActiveDateRangeCss(SesVar);
                else SetDefaultDateRangeCss();
            }
            //}
        }

        $(window).scroll(function () {
            if ($(window).scrollTop() >= 0) {
                $('#divButtons').addClass('fixed-header');
            }
            if ($(window).scrollTop() <= 0) {
                $('#divButtons').removeClass('fixed-header');
            }
        });


    });

    function downloadFile(obj, type) {

        $("#hdnDownloadID").val(obj);
        $("#hdnDownloadType").val(type);
        var btn = $("#btnProcessDownload");
        btn.click();
    }
</script>

<script type="text/javascript">

    function dec_date(select, txtDateTo, txtDateFrom, rdGroup) {
        var select = select;
        var txtDateTo = txtDateTo;
        var txtDateFrom = txtDateFrom;
        var rdGroup = rdGroup;
        var xday;
        var xWeek;
        var xMonth;
        var xYear;
        var xQuarter;
        if (select == "dec") {
            xday = -1;
            xWeek = -7;
            xMonth = -1;
            xQuarter = -3;
            xYear = -1;
        }
        if (select == "inc") {

            xday = 1;
            xWeek = 7;
            xMonth = 1;
            xQuarter = 3;
            xYear = 1;
        }
        var radio = document.getElementsByName(rdGroup); //Client ID of the RadioButtonList1
        var selected;
        for (var i = 0; i < radio.length; i++) {
            if (radio[i].checked) { // Checked property to check radio Button check or not
                //alert("Radio button having value " + radio[i].value + " was checked."); // Show the checked value
                selected = radio[i].value;

            }
            if (selected == "") {
                selected = 'rdWeek';
            }
        }
        if (selected == 'rdDay') {

            //dec the from date
            var tt = $(txtDateFrom).val();

            var date = new Date(tt);
            var newdate = new Date(date);

            newdate.setDate(newdate.getDate() + xday);

            var dd = newdate.getDate();
            var mm = newdate.getMonth() + 1;
            var y = newdate.getFullYear();

            var someFormattedDate = mm + '/' + dd + '/' + y;
            $(txtDateFrom).val(someFormattedDate);
            //dec the to date

            var TT = $(txtDateTo).val();

            var DATE = new Date(TT);
            var NEWDATE = new Date(DATE);

            NEWDATE.setDate(NEWDATE.getDate() + xday);

            var DD = NEWDATE.getDate();
            var MM = NEWDATE.getMonth() + 1;
            var Y = NEWDATE.getFullYear();

            var someFormattedDATE = MM + '/' + DD + '/' + Y;
            $(txtDateTo).val(someFormattedDATE);
        }
        else if (selected == 'rdWeek') {
            //dec the from date
            var tt = $(txtDateFrom).val();

            var date = new Date(tt);
            var newdate = new Date(date);

            newdate.setDate(newdate.getDate() + xWeek);

            var dd = newdate.getDate();
            var mm = newdate.getMonth() + 1;
            var y = newdate.getFullYear();

            var someFormattedDate = mm + '/' + dd + '/' + y;
            $(txtDateFrom).val(someFormattedDate);
            //dec the to date

            var TT = $(txtDateTo).val();

            var DATE = new Date(TT);
            var NEWDATE = new Date(DATE);

            NEWDATE.setDate(NEWDATE.getDate() + xWeek);

            var DD = NEWDATE.getDate();
            var MM = NEWDATE.getMonth() + 1;
            var Y = NEWDATE.getFullYear();

            var someFormattedDATE = MM + '/' + DD + '/' + Y;
            $(txtDateTo).val(someFormattedDATE);
        }
        else if (selected == 'rdMonth') {
            //dec the from date

            Date.isLeapYear = function (year) {
                return (((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0));
            };

            Date.getDaysInMonth = function (year, month) {
                return [31, (Date.isLeapYear(year) ? 29 : 28), 31, 30, 31, 30, 31, 31, 30, 31, 30, 31][month];
            };

            Date.prototype.isLeapYear = function () {
                return Date.isLeapYear(this.getFullYear());
            };

            Date.prototype.getDaysInMonth = function () {
                return Date.getDaysInMonth(this.getFullYear(), this.getMonth());
            };

            Date.prototype.addMonths = function (value) {

                var n = this.getDate();
                this.setDate(1);
                this.setMonth(this.getMonth() + value);
                this.setDate(Math.min(n, this.getDaysInMonth()));
                return this;
            };

            Date.prototype.addMonthsLast = function (value) {

                var n = this.getDate();
                this.setDate(1);
                this.setMonth(this.getMonth() + 1);
                if (this.getDaysInMonth() == 31) {

                    this.setDate(Math.max(n, this.getDaysInMonth()));
                }
                else {
                    this.setDate(Math.min(n, this.getDaysInMonth()));

                }

                return this;
            };

            Date.prototype.addMonthsLastDec = function (value) {

                var n = this.getDate();
                this.setDate(1);
                this.setMonth(this.getMonth() - 1);
                if (this.getDaysInMonth() == 31) {

                    this.setDate(Math.max(n, this.getDaysInMonth()));
                }
                else {
                    this.setDate(Math.min(n, this.getDaysInMonth()));

                }

                return this;
            };
            var tt = $(txtDateFrom).val();

            var date = new Date(tt).toDateString();
            var newdate = new Date(date);

            newdate.addMonths(xMonth);

            var dd = newdate.getDate();
            var mm = newdate.getMonth() + 1;
            var y = newdate.getFullYear();

            var someFormattedDate = mm + '/' + dd + '/' + y;
            $(txtDateFrom).val(someFormattedDate);


            //dec the to date
            if (select == 'dec') {
                var ti = $(txtDateTo).val();
                var date = new Date(ti).toDateString();
                var newdateti = new Date(date);
                newdateti.addMonthsLastDec(xMonth);

                var dd = newdateti.getDate();
                var mm = newdateti.getMonth() + 1;
                var y = newdateti.getFullYear();

                var someFormattedDate = mm + '/' + dd + '/' + y;
                $(txtDateTo).val(someFormattedDate);
            }

            else {
                var ti = $(txtDateTo).val();

                var date = new Date(ti).toDateString();
                var newdateti = new Date(date);
                newdateti.addMonthsLast(xMonth);

                var dd = newdateti.getDate();
                var mm = newdateti.getMonth() + 1;
                var y = newdateti.getFullYear();

                var someFormattedDate = mm + '/' + dd + '/' + y;
                $(txtDateTo).val(someFormattedDate);
            }
        }


        else if (selected == 'rdQuarter') {
            //dec the from date
            var tt = $(txtDateFrom).val();

            var date = new Date(tt);
            var newdate = new Date(date);

            newdate.setMonth(newdate.getMonth() + xQuarter);

            var dd = newdate.getDate();
            var mm = newdate.getMonth() + 1;
            var y = newdate.getFullYear();

            var someFormattedDate = mm + '/' + dd + '/' + y;
            $(txtDateFrom).val(someFormattedDate);
            //dec the to date

            var TT = $(txtDateTo).val();

            var DATE = new Date(TT);
            var NEWDATE = new Date(DATE);

            //decrease date range
            if (select == 'dec') {
                xQuarter = -3;

                if (DATE.getMonth() == 11) {
                    NEWDATE.setDate(NEWDATE.getDate() - 1);
                    NEWDATE.setMonth(NEWDATE.getMonth() + xQuarter);

                }
                else if (DATE.getMonth() == 5) {
                    NEWDATE.setMonth(NEWDATE.getMonth() + xQuarter);
                    NEWDATE.setDate(NEWDATE.getDate() + 1);

                }
                else {
                    NEWDATE.setMonth(NEWDATE.getMonth() + xQuarter);

                }

            }
            else {
                xQuarter = 3;
                NEWDATE.setDate(NEWDATE.getDate() - 1);
                NEWDATE.setMonth(NEWDATE.getMonth() + xQuarter);
                if (NEWDATE.getMonth() == 11 || NEWDATE.getMonth() == 12 || DATE.getMonth() == 11) {
                    NEWDATE.setDate(31);
                } else {
                    if (DATE.getMonth() == 5) { NEWDATE.setDate(NEWDATE.getDate() + 1); }
                    else { NEWDATE.setDate(NEWDATE.getDate()); }

                }
            }
            var DD = NEWDATE.getDate();
            var MM = NEWDATE.getMonth() + 1;
            var Y = NEWDATE.getFullYear();

            var someFormattedDATE = MM + '/' + DD + '/' + Y;
            $(txtDateTo).val(someFormattedDATE);
        }
        else if (selected == 'rdYear') {

            var tt = $(txtDateFrom).val();

            var date = new Date(tt);
            var newdate = new Date(date);

            newdate.setFullYear(newdate.getFullYear() + xYear);

            var dd = newdate.getDate();
            var mm = newdate.getMonth() + 1;
            var y = newdate.getFullYear();

            var someFormattedDate = mm + '/' + dd + '/' + y;
            $(txtDateFrom).val(someFormattedDate);
            //dec the to date

            var TT = $(txtDateTo).val();

            var DATE = new Date(TT);
            var NEWDATE = new Date(DATE);

            NEWDATE.setFullYear(NEWDATE.getFullYear() + xYear);
            var DD = NEWDATE.getDate();
            var MM = NEWDATE.getMonth() + 1;
            var Y = NEWDATE.getFullYear();

            var someFormattedDATE = MM + '/' + DD + '/' + Y;
            $(txtDateTo).val(someFormattedDATE);
        }

        return false;

    }
    function SelectDate(type) {
        var type = type;
        var txtDateFrom = "#txtStartDate";
        var txtdateTo = "#txtEndDate";
        CssClearLabel();
        if (type == 'Day') {
            var todaydate = new Date();
            var day = todaydate.getDate();
            var month = todaydate.getMonth() + 1;
            var year = todaydate.getFullYear();
            var datestring = month + "/" + day + "/" + year;
            $(txtdateTo).val(datestring);
            $(txtDateFrom).val(datestring);
            $("#lblDay").addClass("labelactive");
            $("#hdnRcvPymtSelectDtRange").val("Day");
        }
        if (type == 'Week') {

            Date.prototype.GetFirstDayOfWeek = function () {
                return (new Date(this.setDate(this.getDate() - this.getDay())));
            }

            Date.prototype.GetLastDayOfWeek = function () {
                return (new Date(this.setDate(this.getDate() - this.getDay() + 6)));
            }
            var today = new Date();
            var Firstdate = today.GetFirstDayOfWeek();
            var day = Firstdate.getDate();
            var month = Firstdate.getMonth() + 1;
            var year = Firstdate.getFullYear();
            var datestring = month + "/" + day + "/" + year;
            $(txtDateFrom).val(datestring);
            var Lastdate = today.GetLastDayOfWeek();
            var day = Lastdate.getDate();
            var month = Lastdate.getMonth() + 1;
            var year = Lastdate.getFullYear();
            var dateString = month + "/" + day + "/" + year;
            $(txtdateTo).val(dateString);
            $("#lblWeek").addClass("labelactive");
            $("#hdnRcvPymtSelectDtRange").val("Week");
        }
        if (type == 'Month') {
            var date = new Date(), y = date.getFullYear(), m = date.getMonth();
            var FirstDayOfMonth = new Date(y, m, 1);
            var lastDayOfMonth = new Date(y, m + 1, 0);
            var day = FirstDayOfMonth.getDate();
            var month = FirstDayOfMonth.getMonth() + 1;
            var year = FirstDayOfMonth.getFullYear();
            var datestring = month + "/" + day + "/" + year;
            $(txtDateFrom).val(datestring);
            var day = lastDayOfMonth.getDate();
            var month = lastDayOfMonth.getMonth() + 1;
            var year = lastDayOfMonth.getFullYear();
            var dateString = month + "/" + day + "/" + year;
            $(txtdateTo).val(dateString);
            $("#lblMonth").addClass("labelactive");
            $("#hdnRcvPymtSelectDtRange").val("Month");
        }
        if (type == 'Quarter') {
            var d = new Date();
            var quarter = Math.floor((d.getMonth() / 3));
            var firstDate = new Date(d.getFullYear(), quarter * 3, 1);
            var lastDate = new Date(firstDate.getFullYear(), firstDate.getMonth() + 3, 0);
            var day = firstDate.getDate();
            var month = firstDate.getMonth() + 1;
            var year = firstDate.getFullYear();
            var datestring = month + "/" + day + "/" + year;
            $(txtDateFrom).val(datestring);
            var day = lastDate.getDate();
            var month = lastDate.getMonth() + 1;
            var year = lastDate.getFullYear();
            var dateString = month + "/" + day + "/" + year;
            $(txtdateTo).val(dateString);
            $("#lblQuarter").addClass("labelactive");
            $("#hdnRcvPymtSelectDtRange").val("Quarter");
        }
        if (type == 'Year') {
            var date = new Date(), y = date.getFullYear(), m = date.getMonth();
            var FirstDayOfYear = new Date(y, 1, 1);
            var lastDayOfYear = new Date(y, 11, 31);
            var day = FirstDayOfYear.getDate();
            var month = FirstDayOfYear.getMonth();
            var year = FirstDayOfYear.getFullYear();
            var datestring = month + "/" + day + "/" + year;
            $(txtDateFrom).val(datestring);
            var day = lastDayOfYear.getDate();
            var month = lastDayOfYear.getMonth() + 1;
            var year = lastDayOfYear.getFullYear();
            var dateString = month + "/" + day + "/" + year;
            $(txtdateTo).val(dateString);
            $("#lblYear").addClass("labelactive");
            $("#hdnRcvPymtSelectDtRange").val("Year");
        }

        $("#hdnCssActive").val("CssActive");
        var clickSearchButton = $("#lnkSearch");
        clickSearchButton.click();
        $("#hdnCssActive").val("1");
    }


</script>


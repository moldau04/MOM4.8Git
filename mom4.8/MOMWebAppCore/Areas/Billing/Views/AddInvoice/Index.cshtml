
@{
    ViewData["Title"] = " List Page";
    Layout = "~/Views/Shared/MOMLayout.cshtml";
}

<!--Grid Control-->
<link href="~/MOMUI/Design/css/grid.css" rel="stylesheet" />
<script type="text/javascript" src="~/MOMUI/Design/js/QuickCodes.js"></script>
<style>
    .highlight {
        background-color: Yellow;
    }

    .highlighted {
        background-color: Yellow;
    }


    .ui-menu .ui-menu-item-wrapper {
        position: relative;
        padding: 3px 1em 3px .4em;
    }

    .rgFooter > td {
        text-align: center !important;
    }

    .cent {
        text-align: center !important;
    }

    .RadGrid_Material .rgHeader {
        color: #2e6b89 !important;
        font-weight: bold !important;
    }

    ul.anchor-links li a {
        border-bottom: 1px groove !important;
    }

    .clearable {
        position: relative;
        display: inline-block;
        width: 100%;
    }

        .clearable input[type=text] {
            padding-right: 24px;
            width: 100%;
            box-sizing: border-box;
        }

    .clearable__clear {
        display: none;
        position: absolute;
        right: 0;
        top: 0;
        padding: 6px 40px;
        font-style: normal;
        font-size: 1.2em;
        user-select: none;
        cursor: pointer;
    }

    .mr {
        margin-right: 10px;
    }

    #overlay {
        position: fixed; /* Sit on top of the page content */
        display: none; /* Hidden by default */
        width: 100%; /* Full width (cover the whole page) */
        height: 100%; /* Full height (cover the whole page) */
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5); /* Black background with opacity */
        z-index: 1000000; /* Specify a stack order in case you're using a different order for other elements */
        cursor: pointer; /* Add a pointer on hover */
    }
</style>

<script type="text/javascript">

    $(document).ready(function () {
        //debugger;
        $("#divProject").slideUp();
        $("#txtProject").focusin(function () {
            //debugger;
            $("#divProject").slideDown();
        });
        $("#txtProject").focusout(function () {
            $("#divProject").slideUp();
            // debugger;
        });

        function dtaa() {
            this.prefixText = null;
            this.jdata = null;
            this.InvID = null;
            this.con = null;
            this.Acct = null;
        }

        ///////////////////// Billing Code


        $("[id*=txtBillingCode]").autocomplete({
            source: function (request, response) {
                var dtaaa = new dtaa();
                dtaaa.prefixText = request.term;
                dtaaa.jdata = null;//$("[id*=hdnBillCodeJSON]").val();
                query = request.term;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "AccountAutoFill.asmx/GetBillingCode",
                    data: JSON.stringify(dtaaa),
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        response($.parseJSON(data.d));
                    },
                    error: function (result) {

                    }
                });
            },
            select: function (event, ui) {
                var txtBillingCode = this.id;
                $(ddlBillingCode).val(ui.item.id);
                var hdnStatus = $('#' + txtBillingCode.replace('txtBillingCode', 'hdnStatus'));
                var hdnAStatus = $('#' + txtBillingCode.replace('txtBillingCode', 'hdnAStatus'));
                var lblDescription = $(txtBillingCode.replace('txtBillingCode', 'lblDescription'));
                var ddlBillingCode = $(txtBillingCode.replace('txtBillingCode', 'ddlBillingCode'));
                var txtBillingCodeID = $(txtBillingCode.replace('txtBillingCode', 'txtBCodeID'));
                var lblPricePer = $(txtBillingCode.replace('txtBillingCode', 'lblPricePer'));
                var txtBCodeType = $(txtBillingCode.replace('txtBillingCode', 'txtBCodeType'));

                $("#hdntxtBCodeID").val(txtBillingCodeID);

                if (ui.item.id == null) {

                    $(lblDescription).val("");
                    $(this).val("");
                    $(ddlBillingCode).val("");
                    $(txtBillingCodeID).val("");
                    $(txtBCodeType).val("");
                    $("#hdntxtBCodeID").val("");
                }
                else {

                    try {

                        $(hdnStatus).val(ui.item.Status);
                        $(hdnAStatus).val(ui.item.AStatus);
                        $(lblDescription).val(ui.item.fDesc.replace("<br />", ""));
                        $(this).val(ui.item.BillType);
                        $(ddlBillingCode).val(ui.item.id);
                        $(txtBillingCodeID).val(ui.item.id);
                        $(txtBCodeType).val(ui.item.type);

                        var priceVal = ui.item.Price1 == '0' ? '0.00' : ui.item.Price1;
                        debugger
                        $(this).closest('tr').find('td').eq(6).find('input').val(priceVal);
                        if ($(hdnAStatus).val() == "1" || $(hdnStatus).val() == "1") {
                            alert("This Account\\Billing code is inactive. Please change account\\billing code name before proceeding.");
                            // noty({
                            //    text: 'This Account\\Billing code is inactive. Please change account\\billing code name before proceeding.',
                            //    type: 'warning',
                            //    layout: 'topCenter',
                            //    closeOnSelfClick: false,
                            //    timeout: 4000,
                            //    theme: 'noty_theme_default',
                            //    closable: true
                            //});
                        }

                        var strBillid = ui.item.id;
                        var PP = lblPricePer;
                        //var hdnBillCode = $("#hdnBillCodeJSON");

                        //if (hdnBillCode != "") {
                        //    var json = hdnBillCode.value
                        //    var obj = jQuery.parseJSON(json);
                        //    jQuery.each(obj, function (key, val) {
                        //        var stop = 0;
                        //        jQuery.each(val, function (keyu, valu) {
                        //            if (keyu == "id" && valu == strBillid) {
                        //                stop = 1;
                        //            }
                        //            if (stop == 1 && keyu == "fDesc") {
                        //                lblDescription.value = valu;
                        //            }
                        //            if (stop == 1 && keyu == "Price1") {
                        //                PP.value = valu;
                        //            }
                        //        });
                        //    });
                        //}

                        var billrate = $("#hdnBillRate").val();
                        if (billrate != "") {
                            $(lblPricePer).val(billrate);
                        }
                        CalculateGridAmount();

                        /////  $$$$  If Inventory Tracking ON then allow user to select warehouse and location $$$$ ////////

                        if ($("#hdnISInventoryTrackingON").val() == '1') {
                            if ($(txtBCodeType).val() == '0') {
                                //var window = $find("# RadWindowWareHouse.ClientID %>');
                                //window.show();
                            }
                        }

                    } catch{
                        $(lblDescription).val("");
                        $(this).val("");
                        $(ddlBillingCode).val("");
                        $(txtBillingCodeID).val("");
                        $(txtBCodeType).val("");
                        $("#hdntxtBCodeID").val("");
                    }
                }
                return false;
            },
            focus: function (event, ui) {
                try {
                    $(this).val(ui.item.BillType);
                } catch{ }
                return false;
            },
            minLength: 0,
            delay: 10
        }).bind('click', function () { $(this).autocomplete("search"); });

        $.each($(".billingsearch"), function (index, item) {
            $(item).data("ui-autocomplete")._renderItem = function (ul, item) {
                var ula = ul;
                var itema = item;
                var result_value = item.BillType;
                var result_fDesc = item.fDesc;
                var INVTYPE = item.type;
                var HAND = item.Hand;
                var HANDDesc = "";
                var x = new RegExp('\\b' + query, 'ig');

                try {

                    if (result_value != null) {
                        result_value = result_value.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }

                    if (result_fDesc != null) {
                        result_fDesc = result_fDesc.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }

                } catch{ }
                if (INVTYPE == 0) {
                    HANDDesc = ', Qty:' + HAND;
                }
                if (result_value == null) {
                    result_value = "";
                }
                if (result_fDesc == null) {
                    result_fDesc = "";
                } else { result_fDesc = ' , ' + result_fDesc; }

                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<a>  " + result_value + "" + HANDDesc + "   <span style='color:Gray;'><b>  </b>" + result_fDesc + "</span></a>")
                    .appendTo(ul);
            };
        });



        ///////////////////////WareHouse
        //txtGvWarehouse
        $("[id*=txtGvWarehouse]").autocomplete({


            source: function (request, response) {

                var dtaaa = new dtaa();

                dtaaa.prefixText = request.term;

                query = request.term;

                var str = request.term;

                var InvID_GetID = $("#hdntxtBCodeID").val();

                console.log($(InvID_GetID).val());

                dtaaa.InvID = $(InvID_GetID).val();
                dtaaa.isShowAll = "yes";
                //debugger;

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "AccountAutoFill.asmx/GetWarehouseName",
                    data: JSON.stringify(dtaaa),
                    dataType: "json",
                    async: true,
                    success: function (data) {

                        response($.parseJSON(data.d));

                    },
                    error: function (result) {
                        alert("Due to unexpected errors we were unable to load account name");
                    }
                });
            },
            select: function (event, ui) {
                try {
                    var InvID_GetID = $("#hdntxtBCodeID").val();

                    var hdnWarehouse = $(InvID_GetID.replace('txtBCodeID', 'hdnWarehouse'));

                    debugger;
                    var Str = ui.item.WarehouseID + ", " + ui.item.WarehouseName;

                    $(this).val(Str);

                    $(txtGvWarehouse).val(Str);

                    $(hdnWarehouse).val(ui.item.WarehouseID);

                    var locationID = 0;

                    var warehouseID = $(hdnWarehouse).val();

                    var invID = $(InvID_GetID).val();

                    //// Check ON Hand
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "AccountAutoFill.asmx/IsItemOnHand",
                        data: '{"INVitemID": "' + invID + '","WareHouseID": "' + ui.item.WarehouseID + '","WHLocationID": "0"}',
                        dataType: "json",
                        async: true,
                        success: function (data) {
                            if (data.d == "false") {
                                alert("Item selected is not on hand, please choose another one.");
                                $(txtGvWarehouse).val("");
                                $(hdnWarehouse).val("");
                            }
                        },
                        error: function (result) {
                            // alert("Due to unexpected errors we were unable to load item.");
                        },

                    });

                    ////

                } catch{ }
                return false;
            },
            focus: function (event, ui) {
                try {
                    $(this).val(ui.item.WarehouseID);
                } catch{ }
                return false;
            },
            minLength: 0,
            delay: 50
        }).click(function () {
            $(this).autocomplete('search', $(this).val())
        });

        $.each($(".Warehousesearchinput"), function (index, item) {

            if (item && typeof item == "object")
                $(item).data("ui-autocomplete")._renderItem = function (ul, item) {

                    var ula = ul;
                    var itema = item;
                    var result_value = item.ID;
                    var result_item = item.WarehouseName;
                    var result_desc = item.WarehouseID;
                    var x = new RegExp('\\b' + query, 'ig'); // notice the escape \ here...
                    result_item = result_item.replace(x, function (FullMatch, n) {
                        return '<span class="highlight">' + FullMatch + '</span>'
                    });
                    if (result_desc != null) {
                        result_desc = result_desc.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }

                    if (result_value == 0) {
                        return $("<li></li>")
                            .data("item.autocomplete", item)
                            .append("<a>" + result_item + "</a>")
                            .appendTo(ul);
                    }
                    else {
                        return $("<li></li>")
                            .data("item.autocomplete", item)
                            .append("<a style='color:blue;'>" + result_item + "</a>")
                            .appendTo(ul);
                    }
                };
        });

        //warehouselocation

        //txtGvWarehouseLocation
        $("[id*=txtGvWarehouseLocation]").autocomplete({

            source: function (request, response) {

                debugger;

                var dtaaa = new dtaa();

                dtaaa.prefixText = request.term;

                query = request.term;

                var str = request.term;

                var InvID_GetID = $("#hdntxtBCodeID").val();

                var hdnWarehouse = $(InvID_GetID.replace('txtBCodeID', 'hdnWarehouse'));


                var ID = $(hdnWarehouse).val();


                dtaaa.WarehouseID = ID;

                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "AccountAutoFill.asmx/GetWarehouseLocation",
                    data: JSON.stringify(dtaaa),
                    dataType: "json",
                    async: true,
                    success: function (data) {

                        response($.parseJSON(data.d));

                    },
                    error: function (result) {
                        alert("Due to unexpected errors we were unable to load account name");
                    }
                });
            },
            select: function (event, ui) {
                try {

                    var InvID_GetID = $("#hdntxtBCodeID").val();

                    var hdnWarehouse = $(InvID_GetID.replace('txtBCodeID', 'hdnWarehouse'));

                    var hdnWarehouseLocationID = $(InvID_GetID.replace('txtBCodeID', 'hdnWarehouseLocationID'));



                    var hdnWarehouse = $(InvID_GetID.replace('txtBCodeID', 'hdnWarehouse'));

                    var Str = ui.item.ID + ", " + ui.item.Name;
                    $(this).val(Str);

                    $(txtGvWarehouseLocation).val(Str);

                    $(hdnWarehouseLocationID).val(ui.item.ID);

                    var locationID = $(hdnWarehouseLocationID).val();

                    var warehouseID = $(hdnWarehouse).val();

                    var invID = $(InvID_GetID).val();


                    //// Check ON Hand
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "AccountAutoFill.asmx/IsItemOnHand",
                        data: '{"INVitemID": "' + invID + '","WareHouseID": "' + warehouseID + '","WHLocationID": "' + ui.item.ID + '"}',
                        dataType: "json",
                        async: true,
                        success: function (data) {
                            if (data.d == "false") {
                                alert("Item selected is not on hand, please choose another one.");
                                $(txtGvWarehouseLocation).val("");
                                $(hdnWarehouseLocationID).val("");
                            }
                        },
                        error: function (result) {
                            alert("Due to unexpected errors we were unable to load item.");
                        },

                    });

                    ////


                } catch{ }

                return false;
            },
            focus: function (event, ui) {
                try {
                    $(this).val(ui.item.ID);
                } catch{ }
                return false;
            },
            minLength: 0,
            delay: 50
        }).click(function () {
            $(this).autocomplete('search', $(this).val())
        })
        $.each($(".WarehouseLocationsearchinput"), function (index, item) {
            $(item).data("ui-autocomplete")._renderItem = function (ul, item) {
                debugger;
                var ula = ul;
                var itema = item;
                var result_value = item.ID;
                var result_item = item.Name;

                var x = new RegExp('\\b' + query, 'ig'); // notice the escape \ here...
                result_item = result_item.replace(x, function (FullMatch, n) {
                    return '<span class="highlight">' + FullMatch + '</span>'
                });


                if (result_value == 0) {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>" + result_item + "</a>")
                        .appendTo(ul);
                }
                else {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a style='color:blue;'>" + result_item + "</a>")
                        .appendTo(ul);
                }
            };
        });

    });

</script>

<script type="text/javascript">
    $(function () {
        var stselected = $('option:selected', $("#ddlStatus")).val();
        var isadd = '<%=ViewState["mode"] %>';
        $("#ddlStatus").bind('change', function () {
            if (isadd == '1') {
                if (stselected != "4") {
                    if ($('option:selected', $(this)).val() == '4') {
                        noty({
                            text: 'This invoice has already posted and cannot be set with Status Marked as Pending.',
                            type: 'warning',
                            layout: 'topCenter',
                            closeOnSelfClick: false,
                            timeout: 4000,
                            theme: 'noty_theme_default',
                            closable: true
                        });
                        $("#ddlStatus").val('0');
                    }
                }
            }
        });
        var projVal = "";
        $("#txtProject").autocomplete({
            open: function (e, ui) {
                $(".ui-autocomplete").mCustomScrollbar({
                    setHeight: 182,
                    theme: "dark-3",
                    autoExpandScrollbar: true
                });
            },
            response: function (e, ui) {
                $(".ui-autocomplete").mCustomScrollbar("destroy");
            },
            source: function (request, response) {
                $("#divProject").hide();
                projVal = request.term;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "TimeCardService.asmx/GetInvoiceByJobID",
                    data: "{'prefixText':'" + request.term + "'}",
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        response(data.d);
                    },
                    error: function (result) {
                        alert("Due to unexpected errors we were unable to load projects");
                    }
                });
            },
            select: function (event, ui) {
                debugger
                $("#txtLocation").val(ui.item.Tag);
                $("#txtCustomer").val(ui.item.Name);
                $("#hdnLocId").val(ui.item.Loc);
                $("#txtProject").val(ui.item.ID + " " + ui.item.fDesc);
                $("#hdnProjectId").val(ui.item.ID);
                $("#txtAddress").val(ui.item.Address);
                $("#hdnIsProjectSearch").val("1");
                $("#lnkProjectID").attr('href', 'addinvoice?uid=' + ui.item.ID);


                $("#btnGetCode").click();
                Materialize.updateTextFields();
                return false;
            },
            focus: function (event, ui) {
                return false;
            },
            minLength: 0,
            delay: 250
        })
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                var x = new RegExp('\\b' + projVal, 'ig'); // notice the escape \ here...
                var _render_id = item.ID;
                var _render_desc = item.fDesc;
                var _render_tag = item.Tag;
                try {
                    if (_render_id != null) {
                        _render_id = _render_id.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }
                    if (_render_desc != null) {
                        _render_desc = _render_desc.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }
                    if (_render_tag != null) {
                        _render_tag = _render_tag.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }
                } catch (e) { };
                return $("<li></li>")
                    .data("item.autocomplete", item)
                    .append("<span class='auto_item'>" + _render_id + " </span><span class='auto_item'>" + _render_desc + "</span><span class='auto_desc'>-" + _render_tag + "</span>")
                    .appendTo(ul);
            };

        SetClose();
        $("#txtProject").keyup(function () {
            SetClose();
        });
        $("#txtLocation").keyup(function () {
            SetClose();
        });
        $("#txtCustomer").keyup(function () {
            SetClose();
        });
        $('.clearable__clear').click(function () {
            var isDisabled = $("#txtLocation").prop('disabled');
            if (isDisabled == false) {
                $("#txtLocation").val("");
                $("#txtCustomer").val("");
                $("#hdnLocId").val("");
                $("#hdnPatientId").val("");
                $("#txtProject").val("");
                $("#hdnProjectId").val("");
                $("#txtAddress").val("");
                $("#txtJobRemarks").text("");
                $("#txtRemarks").text("");

                $("#ProjectBillingInfo").hide();
                $("#dvProjectInfo").hide();
                $("#lnkProjectID").attr('href', 'javascript:void(0)');
                $("#iProIcon").attr('style', 'color:#5815c02b !important');
                $("#ctl00_ContentPlaceHolder1_RadGrid_gvInvoices_ctl00 tbody tr").each(function () {
                    $(this).find('td:eq(2) input[type=text]').val("");
                    $(this).find('td:eq(3) input[type=text]').val("");
                    $(this).find('td:eq(4) textarea').text("");
                    $(this).find('td:eq(5) input[type=text]').val('0.00');
                    $(this).find('td:eq(6) span').text("");
                    $(this).find('td:eq(8) input[type=text]').val('0.00');
                    $(this).find('td:eq(9) span').text('0.00');
                    $(this).find('td:eq(1) select').html('<option value="0">-Select-</option>');
                    $("#dvprojectSlider").html("");
                    CalculateGridAmount();
                });
                location.reload();
                SetClose();
            }

        });

        function SetClose() {
            $Proj = $("#txtProject"),
                $Loc = $("#txtLocation"),
                $Cus = $("#txtCustomer");

            if ($Proj.val() != "") {
                $Proj.closest('span').find('i').attr('style', 'display:inline');
            }
            else {
                $Proj.closest('span').find('i').attr('style', 'display:none');
            }
            if ($Loc.val() != "") {
                $Loc.closest('span').find('i').attr('style', 'display:inline');
            }
            else {
                $Loc.closest('span').find('i').attr('style', 'display:none');
            }
            if ($Cus.val() != "") {
                $Cus.closest('span').find('i').attr('style', 'display:inline');
            }
            else {
                $Cus.closest('span').find('i').attr('style', 'display:none');
            }
        }
    });
</script>

<script type="text/javascript">
    function InActiveBillCode(code) {
        noty({
            text: 'Billing code "' + code + '" is InActive. Please select Active Billing code.',
            type: 'warning',
            layout: 'topCenter',
            closeOnSelfClick: false,
            timeout: 10000,
            theme: 'noty_theme_default',
            closable: true
        });
    }
    function Billto() {
        if ($("#chkBillTo").is(':checked')) {
            $("#txtAddress").prop("disabled", false);
        } else {
            $("#txtAddress").prop("disabled", true);
        }
    }
    ///////////// Custom validator function for customer auto search  ////////////////////
    function ChkCustomer(sender, args) {
        var hdnPatientId = $("#hdnPatientId");
        if (hdnPatientId.value == "") {
            args.IsValid = false;
        }
    }
    ///////////// Custom validator function for location auto search  ////////////////////
    function ChkLocation(sender, args) {
        var hdnLocId = $("#hdnLocId");
        if (hdnLocId.value == "") {
            args.IsValid = false;
        }
    }
    function showModalPopupViaClientCust() {
        var modalPopupBehavior = $find('programmaticModalPopupBehavior');
        modalPopupBehavior.show();
    }
    function EditInvoice() {
        $("#btnEdit").click();
    }
    function SelectRowFill(gridview, id, name, hdn, hdnnames, DIV) {
        var rowid = $(id);
        var rowname = $(name);
        var grid = $(gridview);
        var hidden = $(hdn);
        var hdnName = $(hdnnames);
        hdnName.value = rowname.innerHTML;
        hidden.value = rowid.innerHTML;
        $("#" + DIV).slideUp();
    }


    function ConfirmCombineTicket(count) {
        var ret = confirm('There exists ' + count + ' more tickets for the same workorder. Do you want to include them with this invoice?');
        if (ret == true) {
            $("#hdnCombine").val(1);
        }
        else {
            $("#hdnCombine").val(0);
        }
    }
    function hideModalPopupViaClient(ev) {
        ev.preventDefault();
        var modalPopupBehavior = $find('programmaticModalPopupBehavior');
        modalPopupBehavior.hide();
    }

    function ZeroAmtValidate(control) {
        var validated = Page_ClientValidate('Invoice');
        disableControl(control);
        if (validated) {
            var projectvalidate = true;
            var project = $("#txtProject").val();
            if (project === "") {
                projectvalidate = confirm('Are you sure you want to save this invoice without a project number?');
            }
            if (projectvalidate === true) {
                var Warn = false;
                var total = 0;

                var masterTable = $find("#RadGrid_gvInvoices").get_masterTableView();
                var count = masterTable.get_dataItems().length;
                var item;
                for (var i = 0; i < count; i++) {
                    item = masterTable.get_dataItems()[i];
                    var amt = item.findElement("lblAmount");
                    var amtVal = $(amt).html();
                    if (amtVal !== "") {
                        total = total + parseFloat(amtVal);
                    }
                }
                if (total !== "") {
                    if (parseFloat(total) === 0) {
                        enableControl(control);
                        Warn = true;
                    }
                }
                else {
                    enableControl(control);
                    Warn = true;
                }
                if (Warn === true) {
                    return confirm('This invoice has a zero amount total. Are you sure you want to save it?');
                }
                else if (Warn === false) {
                    enableControl(control);
                    return true;
                }
            }
        }
        Page_BlockSubmit = false;
        enableControl(control);
        return false;
    }

    function disableControl(control) {
        $(control).css("pointer-events", "none");
    }

    function enableControl(control) {
        setTimeout(function () { $(control).css("pointer-events", "all"); }, 1000);

    }

</script>

<script>
    $(document).ready(function () {
        function dtaa() {
            this.prefixText = null;
            this.con = $("#hdnCon").val();
            this.custID = null;
        }
        var query = "";
        $("#txtCustomer").autocomplete({

            source: function (request, response) {
                var dtaaa = new dtaa();
                dtaaa.prefixText = request.term;
                query = request.term;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "CustomerAuto.asmx/GetCustomer",
                    data: JSON.stringify(dtaaa),
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        response($.parseJSON(data.d));
                    },
                    error: function (result) {
                        alert("Due to unexpected errors we were unable to load customers");
                    }
                });
            },
            select: function (event, ui) {
                $("#txtCustomer").val(ui.item.label);
                $("#hdnPatientId").val(ui.item.value);
                $("#txtLocation").focus();
                $("#txtLocation").val("");
                $("#hdnLocId").val("");
                $("#hdnIsProjectSearch").val('0');
                $("#btnSelectCustomer").click();
                Materialize.updateTextFields();
                return false;
            },
            focus: function (event, ui) {
                $("#txtCustomer").val(ui.item.label);
                return false;
            },
            minLength: 0,
            delay: 50
        })
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                var result_item = item.label;
                var result_desc = item.desc;
                var x = new RegExp('\\b' + query, 'ig'); // notice the escape \ here...
                if (result_item) {
                    result_item = result_item.replace(x, function (FullMatch, n) {
                        return '<span class="highlight">' + FullMatch + '</span>'
                    });
                }
                if (result_desc != null) {
                    result_desc = result_desc.replace(x, function (FullMatch, n) {
                        return '<span class="highlight">' + FullMatch + '</span>'
                    });
                }
                if (result_item) {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>" + result_item + ", <span style='color:Gray;'>" + result_desc + "</span></a>")
                        .appendTo(ul)
                }
            };
        ///////////// Ajax call for location auto search ////////////////////
        var queryloc = "";
        $("#txtLocation").autocomplete(
            {

                source: function (request, response) {
                    var dtaaa = new dtaa();
                    dtaaa.prefixText = request.term;
                    dtaaa.custID = 0;
                    if ($("#hdnPatientId").val() != "") {
                        dtaaa.custID = $("#hdnPatientId").val();
                    }
                    queryloc = request.term;
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "CustomerAuto.asmx/GetLocation",
                        data: JSON.stringify(dtaaa),
                        dataType: "json",
                        async: true,
                        success: function (data) {
                            response($.parseJSON(data.d));
                            $("#divProject").slideUp();
                        },
                        error: function (result) {
                            alert("Due to unexpected errors we were unable to load customers");
                        }
                    });
                },
                select: function (event, ui) {
                    $("#txtLocation").val(ui.item.label);
                    $("#hdnLocId").val(ui.item.value);
                    $("#btnSelectLoc").click();
                    Materialize.updateTextFields();
                    return false;
                },
                focus: function (event, ui) {
                    $("#txtLocation").val(ui.item.label);
                    return false;
                },
                minLength: 0,
                delay: 50
            })
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                var result_item = item.label;
                var result_desc = item.desc;
                var x = new RegExp('\\b' + queryloc, 'ig'); // notice the escape \ here...
                if (result_item) {
                    result_item = result_item.replace(x, function (FullMatch, n) {
                        return '<span class="highlight">' + FullMatch + '</span>'
                    });
                }
                if (result_desc != null) {
                    result_desc = result_desc.replace(x, function (FullMatch, n) {
                        return '<span class="highlight">' + FullMatch + '</span>'
                    });
                }
                if (result_item) {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>" + result_item + ", <span style='color:Gray;'>" + result_desc + "</span></a>")
                        .appendTo(ul);
                }
            };
        $("#txtCustomer").keyup(function (event) {
            var hdnPatientId = $("#hdnPatientId");
            if ($("#txtCustomer").val() == "") {
                hdnPatientId.val("");
            }
        });
        $("#txtLocation").keyup(function (event) {
            var hdnLocId = $("#hdnLocId");
            if ($("#txtLocation").val() == "") {
                hdnLocId.val("");
            }
        });
        //debugger;
        $("#divProject").slideUp();
        $("#txtProject").focusin(function () {
            //debugger;
            $("#divProject").slideDown();
        });
        $("#txtProject").focusout(function () {
            //debugger;
            $("#divProject").slideUp();
        });
        $addHandler($get("hideModalPopupViaClientButton"), 'click', hideModalPopupViaClient);

        $("#txtProject").change(function () {
            var projectText = $("#txtProject").val();
            if (projectText == "" || projectText == undefined) {
                $("#btnResetProject").click();
                Materialize.updateTextFields();
            }
        });
        ///////////// Quick Codes //////////////
        $("#txtRemarks").keyup(function (event) {
            replaceQuickCodes(event, "#txtRemarks", $("#hdnCon").val());
        });
    });


</script>

<script type="text/javascript">
    //Sys.Application.add_init(appl_init);

    function appl_init() {
        var pgRegMgr = Sys.WebForms.PageRequestManager.getInstance();
        pgRegMgr.add_beginRequest(BlockUI);
        pgRegMgr.add_endRequest(UnblockUI);
    }

    function BlockUI(sender, args) {
        $("#overlay").css('display', 'block');
    }
    function UnblockUI(sender, args) {
        $("#overlay").css('display', 'none');
    }
</script>

<div id="overlay">
    <img src="~/MOMUI/images/wheel.gif" alt="Be patient..." style="position: fixed; margin-top: 25%; margin-left: 50%;" />
</div>

<div class="divbutton-container">
    @Html.Hidden("hdnIsProjectPO", "0")
    <div id="divButtons" class="">
        <div id="breadcrumbs-wrapper">
            <header>
                <div class="container row-color-grey">
                    <div class="row">
                        <div class="col s12 m12 l12">
                            <div class="row">
                                <div class="page-title"><i class="mdi-communication-contacts"></i>&nbsp;<label class="title_text" ID="lblHeader" style="font-size:15px">Add Invoice</label></div>
                                <div class="buttonContainer">
                                    <div class="btnlinks">
                                        <a class="dropdown-button" href="#!" data-activates="dropdown1">
                                            Reports
                                        </a>
                                    </div>
                                    <ul id="dropdown1" class="dropdown-content">
                                        <li>
                                            <a ID="lnkPDF" Enabled="true"> <i class="fa fa-file-pdf-o" style="color:red; background-color:transparent" aria-hidden="true"></i>&nbsp;&nbsp; Invoice <i class="fa fa-download" aria-hidden="true" style="background-color:transparent;"></i></a>
                                        </li>
                                        <li>
                                            <a href="#" class="-text">Billing Invoice</a>
                                        </li>
                                    </ul>
                                    <div class="btnlinks">
                                        <a ID="lnkMakePayment">Make Payment</a>
                                    </div>

                                    <div class="btnlinks">
                                        <a class="dropdown-button" href="#!" data-activates="dropdownPreview">
                                            Preview
                                        </a>
                                    </div>
                                    <ul id="dropdownPreview" class="dropdown-content" style="width:200px;">
                                        <li>
                                            <a ID="lnkPreviewEmail" onclick="return ZeroAmtValidate(this);">Invoice</a>
                                        </li>
                                        <li>
                                            <a ID="lnkPreviewEmailInvTicket" CausesValidation="true" onclick="return ZeroAmtValidate(this);" Enabled="true">Invoice With Ticket</a>
                                        </li>
                                    </ul>
                                    <div class="btnlinks">
                                        <a ID="btnSubmit" onclick="return ZeroAmtValidate(this);" ValidationGroup="Invoice">Save</a>
                                    </div>
                                    <div class="btnlinks">
                                        <a ID="lnkReceiptPayment">Receipt Payment</a>
                                    </div>
                                    <ul class="nav navbar-nav pull-right" style="display: block">
                                        <li class="dropdown dropdown-user">
                                            <a class="btn-box hover-zoom-effect dropdown-button" href="#!" data-activates="dynamicUI">
                                                <div class="text">
                                                    Print
                                                </div>
                                            </a>
                                            <ul id="dynamicUI" class="dropdown-content">
                                                <li>
                                                    <a ID="lnkPrint" CausesValidation="true" Enabled="true">Invoice</a>
                                                </li>
                                                <li>
                                                    <a ID="lnk_InvoiceMaint" CausesValidation="true"
                                                       Enabled="true">Invoice Maintenance Report</a>
                                                </li>
                                                <li>
                                                    <a ID="lnk_InvoiceException" CausesValidation="true" Enabled="true">Invoice Exception report</a>
                                                </li>
                                                <li>
                                                    <a ID="lnk_InvoiceLNY" CausesValidation="true"
                                                       Enabled="true">Invoice-LNY</a>
                                                </li>
                                                <li>
                                                    <a ID="lnkInvTkt" CausesValidation="true" Enabled="true">Invoice With Ticket</a>
                                                </li>
                                                <li>
                                                    <a ID="lnk_InvoiceAdamMaintenance" CausesValidation="true" Enabled="true">Maintenance Invoice</a>
                                                </li>
                                                <li>
                                                    <a ID="lnk_InvoiceAdamBilling" CausesValidation="true" Enabled="true">Billing Invoice</a>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                </div>
                                <div class="btnclosewrap">
                                    <a ID="lnkClose" ToolTip="Close" CausesValidation="false"><i class="mdi-content-clear"></i></a>
                                </div>
                                <div class="rght-content">
                                    <div class="editlabel">
                                        <label ID="lblInv"></label>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </header>
        </div>
        <div class="container breadcrumbs-bg-custom">
            <div class="row">
                <div class="col s12 m12 l12">
                    <div class="row">
                        <div class="tblnks">
                            <ul class="anchor-links">
                                <li><a href="#accrdInvoice">Invoice Detail</a></li>

                                <li id="liHistoryPayment"><a href="#accrdPayment">Payment History</a></li>
                                <li id="liLogs"><a href="#accrdlogs">Logs</a></li>
                            </ul>
                        </div>
                        <div class="tblnksright">
                            <div class="nextprev">
                                <div ID="pnlSave">
                                    <div ID="pnlNext">
                                        <span class="angleicons">
                                            <a ID="lnkFirst" ToolTip="First" CausesValidation="False">
                                                <i class="fa fa-angle-double-left"></i>
                                            </a>
                                        </span>
                                        <span class="angleicons">
                                            <a ID="lnkPrevious" ToolTip="Previous" CausesValidation="False">
                                                <i class="fa fa-angle-left"></i>
                                            </a>
                                        </span>
                                        <span class="angleicons">
                                            <a ID="lnkNext" ToolTip="Next" CausesValidation="False">
                                                <i class="fa fa-angle-right"></i>
                                            </a>
                                        </span>
                                        <span class="angleicons">
                                            <a ID="lnkLast" ToolTip="Last" class="icon-last" CausesValidation="False">
                                                <i class="fa fa-angle-double-right"></i>
                                            </a>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="container accordian-wrap">
    <div class="row">
        <div class="col s12 m12 l12">
            <div class="row">
                <div class="card" style="min-height: 700px !important; border-radius: 6px;">
                    <div class="alert alert-warning" id="divSuccess">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        These month/year period is closed out. You do not have permission to add/update this record.
                    </div>
                    <div class="alert alert-warning" id="divProjectClose">
                        <button type="button" class="close" data-dismiss="alert">×</button>
                        Project is closed. You do not have permission to add/update this record.
                    </div>
                    <div class="card-content" style="padding-top: 10px;">

                        <div style="float: left; clear: both;" id="divUpdate">
                            <input id="hdnCon" type="hidden" />
                            <input id="hdnPatientId" type="hidden" />
                            <input id="hdnLocId" type="hidden" />
                            <input id="hdnFocus" type="hidden" />
                            <input id="hdnStax" type="hidden" />
                            <input id="hdnGstTax" type="hidden" />
                            <input id="hdnTaxRegion" type="hidden" />
                            <input id="hdnsTaxType" type="hidden" />
                            <input id="hdnBillCodeJSON" type="hidden" />
                            <input id="hdnCombine" type="hidden" />
                            <input id="hdnProjectId" type="hidden" />
                            <input id="hdnProjectStatus" type="hidden" />
                            <input id="hdnTotalAmount" type="hidden" />
                            <div class="form-section-row" id="accrdInvoice">
                                <div class="col s12 m12 l12">
                                    <div class="form-section-row ">
                                        <div class="form-input-row">
                                            <div class="form-section3 invoicemgncustom">
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        <span class="clearable">
                                                            <input type="text" ID="txtCustomer" autocomplete="off" />

                                                            <input type="button" CausesValidation="false" ID="btnSelectCustomer" value="Button"
                                                                   style="display: block;"
                                                                   UseSubmitBehavior="False" />
                                                            <label ID="lblcust" for="txtCustomer">Customer - Search By Name, Phone#, Address etc</label>
                                                            <i class="clearable__clear mr">&times;</i>
                                                        </span>
                                                    </div>
                                                    <div class="srchclr btnlinksicon rowbtn">
                                                        <a for="txtCustomer" ID="lnkCustomerID"><i class="mdi-social-people" style="margin-left:0px !important;"></i></a>
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        <span class="clearable">
                                                            <input type="text" ID="txtLocation" class="validate" autocomplete="off"
                                                                   ToolTip="Location Name " />
                                                            <input type="button" CausesValidation="false" ID="btnSelectLoc" value="Button"
                                                                   style="display: block;" UseSubmitBehavior="False" />
                                                            <label ID="Label4" for="txtLocation">Location - Search By Location, Phone#, Address etc</label>

                                                            <i class="clearable__clear mr">&times;</i>
                                                        </span>
                                                    </div>
                                                    <div class="srchclr btnlinksicon rowbtn">
                                                        <a for="txtLocation" ID="lnkLocationID"><i class="mdi-communication-location-on" style="margin-left:0px !important;"></i></a>
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        <label ID="lbltxtAddress" for="txtAddress">Bill To</label>
                                                        <textarea ID="txtAddress" ToolTip="Address"
                                                                  TextMode="MultiLine" MaxLength="8000" class="materialize-textarea pd-negate"></textarea>

                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        <label ID="Label2" for="txtRemarks">Invoice Remarks</label>
                                                        <textarea ID="txtRemarks" TextMode="MultiLine"
                                                                  MaxLength="8000" class="materialize-textarea pd-negate"></textarea>
                                                        <img ID="imgVoid" src="~/MOMUI/Design/images/void.png" style="height: 35px;" />
                                                        <input type="image" ID="imgPaid" src="~/MOMUI/Design/images/paid.png" style="height:40px" onclick="scrollToAnchor();return false;" />
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-section3-blank">
                                                &nbsp;
                                            </div>
                                            <div class="form-section3">
                                                <div class="input-field col s12 invoicepagetitlewrap">
                                                    <div class="row">
                                                        <div class="invoicemaintitle borderseperator">Invoice</div>
                                                        <div class="invoicemainnm">
                                                            <label ID="lblCompNme"></label>
                                                        </div>
                                                        <div class="invoicemainaddr">
                                                            <label ID="lblCompAddress"></label>
                                                            <label ID="lblCompCity"></label>
                                                            <label ID="lblCompState"></label>
                                                            <label ID="lblCompZip"></label>
                                                            <label ID="lblCompphone"></label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        &nbsp;
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        &nbsp;
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        &nbsp;
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        &nbsp;
                                                    </div>
                                                </div>
                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        &nbsp;
                                                    </div>
                                                </div>

                                                <div class="input-field col s12" style="margin-top: 10px;">
                                                    <div class="row">
                                                        <label for="txtJobRemarks">Project Remarks</label>
                                                        <textarea ID="txtJobRemarks" TextMode="MultiLine"
                                                                  MaxLength="8000" class="materialize-textarea pd-negate"></textarea>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-section3-blank">
                                                &nbsp;
                                            </div>
                                            <div class="form-section3 invoicemgncustom">

                                                <div class="form-section4" style="width:100% !important;">
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtInvoiceDate" id="Label5">Invoice Date</label>
                                                            <input type="text" ID="txtInvoiceDate" class="datepicker_mom" MaxLength="50" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s2">
                                                        <div class="row">

                                                            &nbsp;
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtInvoiceNo" id="Label8">Manual Invoice #</label>
                                                            <input type="text" ID="txtInvoiceNo" class="validate pdngate" MaxLength="50" ToolTip="Invoice #" />

                                                        </div>
                                                    </div>
                                                </div>

                                                <div class="input-field col s12">
                                                    <div class="row">
                                                        <span class="clearable">
                                                            <input type="text" ID="txtProject"
                                                                   autocomplete="off" />
                                                            <label for="txtProject">Project #</label>
                                                            <i class="clearable__clear">&times;</i>
                                                        </span>

                                                        @Html.Hidden("hdnIsProjectSearch", "")
                                                    </div>
                                                </div>

                                                <div class="srchclr btnlinksicon rowbtn">
                                                    <a for="txtProject" ID="lnkProjectID"><i id="iProIcon" class="mdi-notification-play-install" style="margin-left:0px !important;"></i></a>
                                                </div>

                                                <div id="divProject" class="grid_container" style="border:none !important; box-shadow:none !important">
                                                    <div class="form-section-row" style="margin-bottom: 0 !important; overflow-x: hidden;overflow-y:scroll; max-height: 200px;">
                                                        <div class="RadGrid RadGrid_Material FormGrid">

                                                            <div id="dvprojectSlider" style="position:absolute; max-height:200px; overflow:auto;z-index:99; background-color:white;border:solid 1px  #9e9e9e;box-shadow: 0 5px #ccc;border-radius: 5px !important">
                                                                <ul class="ui-menu ui-widget ui-widget-content">
                                                                </ul>

                                                            </div>

                                                        </div>
                                                        <input type="button" ID="btnGetCode" CausesValidation="false" value="Button" style="display: block;" />
                                                        <input type="button" ID="btnResetProject" CausesValidation="false" value="Button" style="display: block;" />
                                                    </div>
                                                </div>

                                                <div class="input-field col s12" id="dvProjectInfo">
                                                    <div class="row">
                                                        <label for="txtJobSRemarks" ID="lblJobSRemarks" Visible="false">Special Notes</label>
                                                        <textarea ID="txtJobSRemarks" TextMode="MultiLine" Visible="false"
                                                                  MaxLength="8000" class="materialize-textarea pd-negate"></textarea>
                                                    </div>
                                                </div>


                                                <div class="form-section4" style="width:100% !important;" id="ProjectBillingInfo" visible="false">
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtBillingType" id="Label1">Billing Type</label>
                                                            <input type="text" ID="txtBillingType" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s2">
                                                        <div class="row">
                                                            &nbsp;
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtjobamt" id="Label3">Amount</label>
                                                            <input type="text" ID="txtjobamt" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>

                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtBillRate" id="lblBillRate">Billing Rate</label>
                                                            <input type="text" ID="txtBillRate" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s2">
                                                        <div class="row">
                                                            &nbsp;
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtOt" id="lblOt">OT Rate</label>
                                                            <input type="text" ID="txtOt" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtNt" id="lblNt">1.7 Rate</label>
                                                            <input type="text" ID="txtNt" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s2">
                                                        <div class="row">
                                                            &nbsp;
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtDt" id="lblDt">DT Rate</label>
                                                            <input type="text" ID="txtDt" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtTravel" id="lblTravel">Travel Rate</label>
                                                            <input type="text" ID="txtTravel" readOnly="readOnly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s2">
                                                        <div class="row">
                                                            &nbsp;
                                                        </div>
                                                    </div>
                                                    <div class="input-field col s5">
                                                        <div class="row">
                                                            <label for="txtMileage" id="lblMileage">Mileage</label>
                                                            <input type="text" ID="txtMileage" readonly="readonly" AutoCompleteType="None"
                                                                   MaxLength="15" />
                                                        </div>
                                                    </div>
                                                </div>

                                                <input type="checkbox" ID="chkBillTo" />
                                                <label for="chkBillTo">Bill to Address</label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="cf"></div>
                            </div>
                        </div>

                        <div class="container accordian-wrap">
                            <div class="col s12 m12 l12">
                                <div class="row">
                                    <ul class="collapsible popout collapsible-accordion form-accordion-head" data-collapsible="expandable">
                                        <li>
                                            <div id="accrdBillingDetails" class="collapsible-header accrd active accordian-text-custom "><i class="mdi-communication-contacts"></i>Billing Details</div>
                                            <div class="collapsible-body" id="divBillingDetails">
                                                <div class="form-content-wrap">
                                                    <div class="form-content-pd">
                                                        <div class="form-section-row" id="divUpdate_1">
                                                            <div class="col s12 m12 l12 borderseperatortop">
                                                                <div class="form-section-row">
                                                                    <div class="form-input-row">
                                                                        <div class="form-sectioninvoice">

                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--PO Textbox--%>*@
                                                                                    <input type="text" ID="txtPO" class="validate" MaxLength="25" />

                                                                                    @*<%--PO Label--%>*@
                                                                                    <label ID="Label6" for="txtPO">PO #</label>
                                                                                </div>
                                                                            </div>
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Tax Rate Textbox--%>*@
                                                                                    <input type="text" ID="txtStaxrate" class="validate" MaxLength="25" />

                                                                                    @*<%--Tax Rate Label--%>*@
                                                                                    <label ID="Label7" for="txtStaxrate">Sales Tax Name with Rate</label>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="form-sectioninvoice-blank">
                                                                            &nbsp;
                                                                        </div>
                                                                        <div class="form-sectioninvoice">
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Terms Label--%>*@
                                                                                    <label class="drpdwn-label">Terms</label>

                                                                                    @*<%--Terms Dropdown--%>*@
                                                                                    <select ID="ddlTerms" class="browser-default" AutoPostBack="false"
                                                                                            CausesValidation="true" ValidationGroup="Invoice" onchange="UpdateDueByTerms()">
                                                                                        <option>Select</option>
                                                                                    </select>
                                                                                </div>
                                                                            </div>
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Department Type Label--%>*@
                                                                                    <label class="drpdwn-label">Department Type</label>

                                                                                    @*<%--Department Type Dropdown--%>*@

                                                                                    <select ID="ddlDepartment" class="browser-default">
                                                                                        <option>Select</option>
                                                                                    </select>

                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                        <div class="form-sectioninvoice-blank">
                                                                            &nbsp;
                                                                        </div>
                                                                        <div class="form-sectioninvoice">
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Due Date Label--%>*@
                                                                                    <label>Due Date</label>

                                                                                    @*<%--Due Date Textbox--%>*@
                                                                                    <input type="text" ID="txtDueDate" class="datepicker_mom" MaxLength="50" />
                                                                                </div>
                                                                            </div>
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Status Label--%>*@
                                                                                    <label class="drpdwn-label">Status</label>
                                                                                    @*<%--Status Dropdown--%>*@
                                                                                    <select ID="ddlStatus" class="browser-default">
                                                                                        <option Value="0">Open</option>
                                                                                        <option Value="1">Paid</option>
                                                                                        <option Value="2">Voided</option>
                                                                                        <option Value="3">Partially Paid</option>
                                                                                        <option Value="4">Marked as Pending</option>
                                                                                        <option Value="5">Paid by Credit Card</option>
                                                                                    </select>
                                                                                </div>
                                                                            </div>


                                                                        </div>
                                                                        <div class="form-sectioninvoice-blank">
                                                                            &nbsp;
                                                                        </div>
                                                                        <div class="form-sectioninvoice">
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Worker Label--%>*@
                                                                                    <label class="drpdwn-label">Worker</label>

                                                                                    @*<%--Worker Dropdown--%>*@
                                                                                <select ID="ddlRoute" class="browser-default">
                                                                                    <option>Select</option>
                                                                                </select>
                                                                                </div>
                                                                            </div>
                                                                            <div class="input-field col s12">
                                                                                <div class="row">
                                                                                    @*<%--Status Label--%>*@
                                                                                    <label class="drpdwn-label">Salesperson</label>
                                                                                    @*<%--Status Dropdown--%>*@
                                                                                <select ID="ddlsaleperson" class="browser-default">
                                                                                    <option>Select</option>
                                                                                </select>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="cf"></div>
                                                        </div>
                                                        <div class="form-section-row">
                                                            <div class="form-section-row">
                                                                <div class="btnlinks">
                                                                    <a ToolTip="Add New"
                                                                       ID="lnkAddnew"
                                                                       CausesValidation="false" UseSubmitBehavior="False">Add</a>
                                                                    <a ID="btnCopyPrevious" CausesValidation="false"
                                                                       style="display: block;">Copy Previous</a>
                                                                </div>
                                                                <div class="btnlinks">
                                                                    <a ToolTip="Delete"
                                                                       ID="btnDelete" CausesValidation="False" UseSubmitBehavior="False"
                                                                       onclick="return confirmDelete();">Delete</a>
                                                                </div>
                                                                <div class="btnlinks">
                                                                    <a ID="btnEdit" CausesValidation="False">Edit</a>

                                                                </div>
                                                            </div>
                                                            <div class="grid_container" style="overflow: scroll;">
                                                                <input id="hdnBillRate" type="hidden" />
                                                                <div class="RadGrid RadGrid_Material FormGrid">



                                                                </div>
                                                            </div>
                                                            <input type="button" ID="hiddenTargetControlForModalPopup" style="display: block"
                                                                   CausesValidation="False" UseSubmitBehavior="False" />

                                                            <div ID="programmaticPopup" style="display: block; background: #fff; border: solid; width: 350px;">
                                                                <div ID="programmaticPopupDragHandle" style="cursor: move; background-color: #DDDDDD; border: solid 1px Gray; color: Black; text-align: center;">
                                                                    <div class="title_bar_popup">
                                                                        <a id="hideModalPopupViaClientButton" href="#" style="float: right; margin-right: 20px; color: #fff; margin-left: 10px; height: 16px;">Cancel</a>
                                                                        <a ID="hideModalPopupViaServerConfirm" CausesValidation="False" style="float: right; margin-right: 20px; color: #fff; margin-left: 10px;">Ok</a>
                                                                    </div>
                                                                </div>
                                                                <div style="padding: 20px;">
                                                                    <strong>
                                                                        <label ID="lblCount"></label>
                                                                    </strong>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div class="cf"></div>
                                                    </div>
                                                </div>
                                            </div>
                                        </li>


                                        @*<%--Payment History--%>*@

                                        <li id="tblPayment">
                                            <div id="accrdPayment" class="collapsible-header accrd  accordian-text-custom"><i class="mdi-content-content-paste"></i>Payment History</div>
                                            <div class="collapsible-body">
                                                <div class="form-content-wrap">
                                                    <div class="form-content-pd">
                                                        <div class="grid_container">
                                                            <div class="form-section-row" style="margin-bottom: 0 !important;">
                                                                <div class="RadGrid RadGrid_Material">


                                                                </div>

                                                            </div>
                                                        </div>

                                                        <div class="cf"></div>
                                                    </div>
                                                </div>
                                                <div style="clear: both;"></div>
                                            </div>
                                        </li>
                                        <li id="tbLogs">
                                            <div id="accrdlogs" class="collapsible-header accrd  accordian-text-custom"><i class="mdi-content-content-paste"></i>Logs</div>
                                            <div class="collapsible-body">
                                                <div class="form-content-wrap">
                                                    <div class="form-content-pd">
                                                        <div class="grid_container">
                                                            <div class="form-section-row" style="margin-bottom: 0 !important;">
                                                                <div class="RadGrid RadGrid_Material">

                                                                </div>

                                                            </div>
                                                        </div>

                                                        <div class="cf"></div>
                                                    </div>
                                                </div>
                                                <div style="clear: both;"></div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="page-content" style="display: block;">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="com-cont">
                    <div>
                        <div class="col-lg-12">
                            <div class="col-lg-4 col-md-4 form-group">
                                <div id="dvCompanyPermission">
                                    <div style="padding: 10px 0px 10px 0px;">
                                        Company
                                    </div>
                                    <div class="fc-input">
                                        <input type="text" ID="txtCompany" class="form-control" Enabled="false" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- edit-tab end -->
            <div class="clearfix"></div>
        </div>
        <!-- END DASHBOARD STATS -->
        <div class="clearfix"></div>
    </div>
</div>

@*<%-------$$$$$$$$$$$$$$ RAD WINDOW $$$$$$$$$$$$$$$$-----%>*@

@Html.Hidden("hdntxtBCodeID", "")
@Html.Hidden("hdnISInventoryTrackingON", "1")
@Html.Hidden("hdLineNo")
@Html.Hidden("hdnSelectPOIndex")
@Html.Hidden("hdnIsOldData")

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.min.js"></script>
<script src="~/MOMUI/Design/js/moment.js"></script>



<script type="text/javascript">

    $(document).ready(function () {
        $('a[href^="#accrd"]').on('click', function (e) {
            e.preventDefault();

            var target = this.hash;
            var $target = $(target);
            if ($(target).hasClass('active') || target == "") {

            }
            else {
                $(target).click();
            }

            $('html, body').stop().animate({
                'scrollTop': $target.offset().top - 125
            }, 900, 'swing');
        });

        Materialize.updateTextFields();

        $(window).scroll(function () {
            if ($(window).scrollTop() >= 0) {
                $("#divButtons").addClass('fixed-header');
            }
            if ($(window).scrollTop() <= 0) {
                $("#divButtons").removeClass('fixed-header');
            }
        });
    });

    function CalculateGridAmount() {
        try {
            // debugger;
            var grid = $find("#RadGrid_gvInvoices");
            var masterTable = grid.get_masterTableView();
            var allItems = masterTable.get_dataItems();
            var hdnIsOldData = $("#hdnIsOldData");
            var hdnsTaxType = $("#hdnsTaxType");
            var stax = $("#hdnStax");
            var gtax = $("#hdnGstTax");

            if (masterTable.get_dataItems().length > 0) {
                var PricePerTotal = 0;
                var PretaxAmountTotal = 0;
                var SalesTaxamountTotal = 0;
                var GstTaxamountTotal = 0;
                var AmountTotal = 0;
                var isGst = 0;
                $("#RadGrid_gvInvoices").find('.stax-css').each(function () {
                    if ($(this).html() == "Sales Tax Amount") {
                        isGst = 0;
                    }
                    else {
                        isGst = 1;
                    }
                });
                for (i = 0; i < masterTable.get_dataItems().length; i++) {
                    var pretax = 0;
                    var staxAmt = 0;
                    var gtaxAmt = 0;
                    var Amount = 0;
                    var row = masterTable.get_dataItems()[i];
                    var cell = masterTable.getCellByColumnUniqueName(row, "Quan");
                    var cell1 = masterTable.getCellByColumnUniqueName(row, "Price");
                    var cell3 = masterTable.getCellByColumnUniqueName(row, "priceQuant");
                    var cell5 = masterTable.getCellByColumnUniqueName(row, "stax"); //check box PST
                    var cell2 = masterTable.getCellByColumnUniqueName(row, "STaxAmt");  //Pst amount
                    var cell7 = masterTable.getCellByColumnUniqueName(row, "EnableGSTTax");//check box GST
                    var cell4;
                    var cell6;
                    if (isGst == 0) {
                        cell4 = masterTable.getCellByColumnUniqueName(row, "Amount");
                    }
                    else {
                        cell6 = masterTable.getCellByColumnUniqueName(row, "GTaxAmt"); //GST Amount
                        cell4 = masterTable.getCellByColumnUniqueName(row, "Amount");
                    }

                    if (cell.childNodes[1].value != "" && cell1.childNodes[1].value != "") {
                        pretax = parseFloat((parseFloat(cell.childNodes[1].value.toString().replace(/[\$\(\),]/g, "")) * parseFloat(cell1.childNodes[1].value.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                        cell3.childNodes[1].innerHTML = pretax.toLocaleString("en-US", { minimumFractionDigits: 2 });
                    }
                    //GST

                    debugger
                    gtaxAmt = 0.00;
                    if (isGst == 1) {
                        if (hdnsTaxType.value == '2') {
                            gtaxAmt = 0.00;

                        } else {

                            if (cell7.childNodes[1].checked == true) {
                                gtaxAmt = parseFloat(pretax) * parseFloat(gtax.value.toString().replace(/[\$\(\),]/g, "")) / 100;

                            }

                            //if (hdnsTaxType.value == '1') {
                            //    if (cell5.childNodes[1].checked == true) {
                            //        gtaxAmt = Math.round(((parseFloat(pretax) * parseFloat(gtax.value.toString().replace(/[\$\(\),]/g, ""))) / 100) * 100) / 100;

                            //    }
                            //} else {
                            //    if (cell7.childNodes[1].checked == true) {
                            //        gtaxAmt = Math.round(((parseFloat(pretax) * parseFloat(gtax.value.toString().replace(/[\$\(\),]/g, ""))) / 100) * 100) / 100;

                            //    }
                            //}
                        }
                        if (cell6 != null) {
                            cell6.childNodes[1].value = (parseFloat(gtaxAmt).toFixed(2)).toLocaleString("en-US", { minimumFractionDigits: 2 });
                        }

                        //if (hdnsTaxType.value != '2') {

                        //    if (gtax.value != "" && cell.childNodes[1].value != "" && cell1.childNodes[1].value != "") {
                        //        if (cell7.childNodes[1].checked == true) {
                        //            gtaxAmt = Math.round(((parseFloat(pretax) * parseFloat(gtax.value.toString().replace(/[\$\(\),]/g, ""))) / 100) * 100) / 100;
                        //            cell6.childNodes[1].value = gtaxAmt.toLocaleString("en-US", { minimumFractionDigits: 2 });
                        //        }
                        //        else {
                        //            gtaxAmt = 0.00;
                        //        }
                        //        cell6.childNodes[1].value = gtaxAmt.toLocaleString("en-US", { minimumFractionDigits: 2 });
                        //    }
                        //} else {
                        //    gtaxAmt = 0.00;
                        //    cell6.childNodes[1].value = gtaxAmt.toLocaleString("en-US", { minimumFractionDigits: 2 });
                        //}

                    }




                    if (hdnsTaxType.value == '3') {
                        staxAmt = 0.00;
                        gtaxAmt = 0.00;
                    } else {
                        if (stax.value != "" && cell.childNodes[1].value != "" && cell1.childNodes[1].value != "") {
                            staxAmt = 0.00;
                            if (cell5.childNodes[1].checked == true) {
                                if (hdnsTaxType.value == '1') {
                                    if (hdnIsOldData.value == '1') {
                                        if (parseFloat(pretax) < 0) {
                                            staxAmt = parseFloat(pretax * (-1)) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                            staxAmt = staxAmt * (-1);
                                        } else {
                                            staxAmt = parseFloat(pretax) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                        }
                                    } else {
                                        // Compound tax
                                        if (parseFloat(pretax) < 0) {
                                            //staxAmt = Math.round(((parseFloat(pretax * (-1) + gtaxAmt *(-1)) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, ""))) / 100) * 100) / 100;
                                            staxAmt = parseFloat(parseFloat(pretax * (-1)) + parseFloat(gtaxAmt * (-1))) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                            staxAmt = staxAmt * (-1);
                                        } else {
                                            staxAmt = parseFloat(parseFloat(pretax) + parseFloat(gtaxAmt)) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                        }
                                    }


                                } else {
                                    if (parseFloat(pretax) < 0) {
                                        staxAmt = parseFloat(pretax * (-1)) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                        staxAmt = staxAmt * (-1);
                                    } else {
                                        staxAmt = parseFloat(pretax) * parseFloat(stax.value.toString().replace(/[\$\(\),]/g, "")) / 100;
                                    }
                                }
                            }
                            else {
                                staxAmt = 0.00;
                            }
                            cell2.childNodes[1].value = (parseFloat(staxAmt).toFixed(2)).toLocaleString("en-US", { minimumFractionDigits: 2 });

                        }
                    }





                    if (cell.childNodes[1].value != "" && cell1.childNodes[1].value != "") {
                        total = parseFloat(pretax) + parseFloat(staxAmt);
                        if (isGst == 1) {
                            total = total + gtaxAmt;
                        }
                        cell4.childNodes[1].innerHTML = (parseFloat(total).toFixed(2)).toLocaleString("en-US", { minimumFractionDigits: 2 });
                    }
                    if (cell1.childNodes[1].value != "") {
                        PricePerTotal = parseFloat((parseFloat(PricePerTotal) + parseFloat(cell1.childNodes[1].value.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                    }
                    if (cell3.childNodes[1].innerHTML != "") {
                        PretaxAmountTotal = parseFloat((parseFloat(PretaxAmountTotal) + parseFloat(cell3.childNodes[1].innerHTML.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                    }
                    if (cell2 != null) {
                        if (cell2.childNodes[1].value != "") {

                            SalesTaxamountTotal = parseFloat((parseFloat(SalesTaxamountTotal) + parseFloat(cell2.childNodes[1].value.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                        }
                    }

                    if (cell4.childNodes[1].innerHTML != "") {
                        AmountTotal = parseFloat((parseFloat(AmountTotal) + parseFloat(cell4.childNodes[1].innerHTML.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                    }
                    if (isGst == 1) {
                        if (cell6 != null) {
                            if (cell6.childNodes[1].value != "") {
                                GstTaxamountTotal = parseFloat((parseFloat(GstTaxamountTotal) + parseFloat(cell6.childNodes[1].value.toString().replace(/[\$\(\),]/g, "")))).toFixed(2);
                            }
                        }

                    }
                }
                var grid = $find("#RadGrid_gvInvoices");
                var MasterTable = grid.get_masterTableView();
                var footerTable = grid.get_masterTableViewFooter().get_element();
                var lblPricePerTotal = $telerik.findElement(footerTable, "lblPricePerTotal");
                lblPricePerTotal.innerHTML = PricePerTotal.toLocaleString("en-US", { minimumFractionDigits: 2 });
                var lblPretaxAmountTotal = $telerik.findElement(footerTable, "lblPretaxAmountTotal");
                lblPretaxAmountTotal.innerHTML = PretaxAmountTotal.toLocaleString("en-US", { minimumFractionDigits: 2 });

                var lblSalesTaxTotal = $telerik.findElement(footerTable, "lblSalesTaxTotal");
                if (lblSalesTaxTotal != null) {
                    lblSalesTaxTotal.innerHTML = SalesTaxamountTotal.toLocaleString("en-US", { minimumFractionDigits: 2 });
                }

                var lblAmountTotal = $telerik.findElement(footerTable, "lblAmountTotal");
                lblAmountTotal.innerHTML = AmountTotal.toLocaleString("en-US", { minimumFractionDigits: 2 });
                if (isGst == 1) {
                    var lblGstTaxTotal = $telerik.findElement(footerTable, "lblGstTaxTotal");
                    lblGstTaxTotal.innerHTML = GstTaxamountTotal.toLocaleString("en-US", { minimumFractionDigits: 2 });
                }
            }
        } catch (e) {

        }

    }
</script>
<script>
    function AddNewRows(sender, eventArgs) {

        var $focused = $(':focus');
        var flag = 0
        try {
            if ($focused[0].id.indexOf("ddlProjectCode") !== -1 || $focused[0].id.indexOf("txtBillingCode") !== -1) {
                flag = 1
            }
        } catch (ex) {
            flag = 0;
        }

        if (eventArgs.get_keyCode() == 40) {
            if (flag == 0) {
                $("#lnkAddnew").click();
            }

        }

    }
    function pageLoad(sender, args) {


        Materialize.updateTextFields();
        $(window.document).keydown(function (event) {

            if (event.which == 117) {
                $("#btnCopyPrevious").click();
                return false;
            }
        })

        $("[id*=ddlProjectCode]").focus(function () {

            var ddlProjectCode = $(this).attr('id');
            var hdnIndex = $(ddlProjectCode.replace('ddlProjectCode', 'hdnIndex'));
            var hdnSelectPOIndex = $("#hdnSelectPOIndex");
            $(hdnSelectPOIndex).val(hdnIndex.val());
        });
        $("[id*=lblQuantity]").focus(function () {
            var lblQuantity = $(this).attr('id');
            var hdnIndex = $(lblQuantity.replace('lblQuantity', 'hdnIndex'));
            var hdnSelectPOIndex = $("#hdnSelectPOIndex");
            $(hdnSelectPOIndex).val(hdnIndex.val());

        });
        $("[id*=txtBillingCode]").focus(function () {
            var txtBillingCode = $(this).attr('id');
            var hdnIndex = $(txtBillingCode.replace('txtBillingCode', 'hdnIndex'));
            var hdnSelectPOIndex = $("#hdnSelectPOIndex");
            $(hdnSelectPOIndex).val(hdnIndex.val());

        });
        $("[id*=lblDescription]").focus(function () {
            var lblDescription = $(this).attr('id');
            var hdnIndex = $(lblDescription.replace('lblDescription', 'hdnIndex'));
            var hdnSelectPOIndex = $("#hdnSelectPOIndex");
            $(hdnSelectPOIndex).val(hdnIndex.val());

        });
        $("[id*=lblPricePer]").focus(function () {
            var lblPricePer = $(this).attr('id');
            var hdnIndex = $(lblPricePer.replace('lblPricePer', 'hdnIndex'));
            var hdnSelectPOIndex = $("#hdnSelectPOIndex");
            $(hdnSelectPOIndex).val(hdnIndex.val());

        });
        function dtaa() {
            this.prefixText = null;
            this.con = $("#hdnCon").val();
            this.custID = null;
        }
        var query = "";
        $("#txtCustomer").autocomplete({

            source: function (request, response) {
                var dtaaa = new dtaa();
                dtaaa.prefixText = request.term;
                query = request.term;
                $.ajax({
                    type: "POST",
                    contentType: "application/json; charset=utf-8",
                    url: "CustomerAuto.asmx/GetCustomer",
                    data: JSON.stringify(dtaaa),
                    dataType: "json",
                    async: true,
                    success: function (data) {
                        response($.parseJSON(data.d));
                    },
                    error: function (result) {
                        alert("Due to unexpected errors we were unable to load customers");
                    }
                });
            },
            select: function (event, ui) {
                $("#txtCustomer").val(ui.item.label);
                $("#hdnPatientId").val(ui.item.value);
                $("#txtLocation").focus();
                $("#txtLocation").val("");
                $("#hdnLocId").val("");
                $("#btnSelectCustomer").click();
                Materialize.updateTextFields();
                return false;
            },
            focus: function (event, ui) {
                $("#txtCustomer").val(ui.item.label);
                return false;
            },
            minLength: 0,
            delay: 50
        })
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                var result_item = item.label;
                var result_desc = item.desc;
                var x = new RegExp('\\b' + query, 'ig'); // notice the escape \ here...

                try {
                    if (result_item) {
                        result_item = result_item.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }
                    if (result_desc != null) {
                        result_desc = result_desc.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }
                } catch (e) { }

                if (result_item) {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>" + result_item + ", <span style='color:Gray;'>" + result_desc + "</span></a>")
                        .appendTo(ul)
                }
            };
        ///////////// Ajax call for location auto search ////////////////////
        var queryloc = "";
        $("#txtLocation").autocomplete(
            {

                source: function (request, response) {
                    var dtaaa = new dtaa();
                    dtaaa.prefixText = request.term;
                    dtaaa.custID = 0;
                    if ($("#hdnPatientId").val() != "") {
                        dtaaa.custID = $("#hdnPatientId").val();
                    }
                    queryloc = request.term;
                    $.ajax({
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        url: "CustomerAuto.asmx/GetLocation",
                        data: JSON.stringify(dtaaa),
                        dataType: "json",
                        async: true,
                        success: function (data) {
                            response($.parseJSON(data.d));
                            $("#divProject").slideUp();
                        },
                        error: function (result) {
                            alert("Due to unexpected errors we were unable to load customers");
                        }
                    });
                },
                select: function (event, ui) {
                    $("#txtLocation").val(ui.item.label);
                    $("#hdnLocId").val(ui.item.value);
                    $("#hdnIsProjectSearch").val('0');
                    $("#btnSelectLoc").click();
                    Materialize.updateTextFields();
                    return false;
                },
                focus: function (event, ui) {
                    $("#txtLocation").val(ui.item.label);
                    return false;
                },
                minLength: 0,
                delay: 50
            })
            .data("ui-autocomplete")._renderItem = function (ul, item) {
                var result_item = item.label;
                var result_desc = item.desc;
                var x = new RegExp('\\b' + queryloc, 'ig'); // notice the escape \ here...

                try {
                    if (result_item) {
                        result_item = result_item.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }

                    if (result_desc != null) {
                        result_desc = result_desc.replace(x, function (FullMatch, n) {
                            return '<span class="highlight">' + FullMatch + '</span>'
                        });
                    }

                } catch (e) { }

                if (result_item) {
                    return $("<li></li>")
                        .data("item.autocomplete", item)
                        .append("<a>" + result_item + ", <span style='color:Gray;'>" + result_desc + "</span></a>")
                        .appendTo(ul);
                }


            };
        $("#txtCustomer").keyup(function (event) {
            var hdnPatientId = $("#hdnPatientId");
            if ($("#txtCustomer").val() == "") {
                hdnPatientId.val("");
            }
        });
        $("#txtLocation").keyup(function (event) {
            var hdnLocId = $("#hdnLocId");
            if ($("#txtLocation").val() == "") {
                hdnLocId.val("");
            }
        });
        //debugger;
        $("#divProject").slideUp();
        $("#txtProject").focusin(function () {
            // debugger;
            $("#divProject").slideDown();
        });
        $("#txtProject").focusout(function () {
            // debugger;
            $("#divProject").slideUp();
        });
        $addHandler($get("hideModalPopupViaClientButton"), 'click', hideModalPopupViaClient);
        Materialize.updateTextFields();
        CalculateGridAmount();

        $("[id$='RadGrid_gvInvoices']").sortable({
            items: 'tr.rgRow, tr.rgAltRow',
            handle: ".handle",
            cursor: 'move',
            axis: 'y',
            dropOnEmpty: false,
            start: function (e, ui) {
                ui.item.addClass("selected");
            },
            stop: function (e, ui) {
                ui.item.removeClass("selected", 1000, "swing");
                updateInvoicegridindex();
            },
            receive: function (e, ui) {
                $(this).find("tbody").append(ui.item);
            }
        });
        $("#txtInvoiceDate").pikaday({
            firstDay: 0,
            format: 'MM/DD/YYYY',
            minDate: new Date(1900, 1, 1),
            maxDate: new Date(2100, 12, 31),
            yearRange: [1900, 2100]
        });
        $("#txtDueDate").pikaday({
            firstDay: 0,
            format: 'MM/DD/YYYY',
            minDate: new Date(1900, 1, 1),
            maxDate: new Date(2100, 12, 31),
            yearRange: [1900, 2100]
        });
        $("[id*=chkSelectAllGtax]").change(function () {

            var ret = $(this).prop('checked');
            $("#RadGrid_gvInvoices").find('tr:not(:first, :last)').each(function () {
                var $tr = $(this);
                var chk = $tr.find('input[id*=chkEnableGSTTax]');
                if (ret == true) {
                    chk.prop('checked', true);
                }
                else {
                    chk.prop('checked', false);
                }

                var ch_id = chk.attr('id');
                if (ch_id != undefined) {
                    if (ch_id.includes("chkEnableGSTTax", 0)) {
                        CalculateGridAmount();
                    }
                }

            })

        });
        $("[id*=chkSelectAllStax]").change(function () {
            // debugger;
            var ret = $(this).prop('checked');

            $("#RadGrid_gvInvoices").find('tr:not(:first, :last)').each(function () {
                var $tr = $(this);
                var chk = $tr.find('input[id*=chkTaxable]');
                if (ret == true) {
                    chk.prop('checked', true);
                }
                else {
                    chk.prop('checked', false);
                }

                var ch_id = chk.attr('id');
                if (ch_id != undefined) {
                    if (ch_id.includes("chkTaxable", 0)) {
                        CalculateGridAmount();
                    }
                }

            })

        });
        function updateInvoicegridindex() {
            var grid1 = 1;
            $("[id$='RadGrid_gvInvoices']  tbody > tr").each(function () {
                var cat = $(this).find('input:hidden[id*="hdnIndex"]');
                debugger
                if (cat !== null && cat.length > 0) {
                    cat.val(grid1);
                    grid1 = grid1 + 1;
                }
            });
        }
    }




    function resetIndexF6() {
        var hdnSelectPOIndex = $("#hdnSelectPOIndex");
        $(hdnSelectPOIndex).val(-1);
    }
    function scrollToAnchor() {


        var aTag = $("#accrdPayment");
        if (aTag.hasClass("active") == false) {
            $("#accrdPayment").click();
        }

        $('html,body').animate({ scrollTop: aTag.offset().top }, 'slow');
        aTag.focus();
        return false;
    }
    function warningAcctMessage() {
        noty({
            text: 'This Account\\Billing code is inactive. Please change account\\billing code name before proceeding.',
            type: 'warning',
            layout: 'topCenter',
            closeOnSelfClick: false,
            timeout: 4000,
            theme: 'noty_theme_default',
            closable: true
        });
    }
    function confirmDelete() {
        var isDisabled = $("#btnDelete").attr('disabled');

        if (isDisabled) {
            return false;
        } else {
            return confirm('Are you sure you want to delete this record?');
        }

    }

    function addDays(date, days) {
        var result = new Date(date);
        result.setDate(result.getDate() + days);
        var day = result.getDate();
        var month = result.getMonth() + 1;
        var year = result.getFullYear();
        var datestring = month + "/" + day + "/" + year;
        return datestring;
    }
    function UpdateDueByTerms() {
        debugger
        var ddlTerms = $("#ddlTerms");
        var txtDueDate = $("#txtDueDate");
        var txtInvoiceDate = $("#txtInvoiceDate");

        if (ddlTerms.val() == "0") {
            txtDueDate.Text = txtInvoiceDate.val();
        }
        else if (ddlTerms.val() == "1") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 10));
        }
        else if (ddlTerms.val() == "2") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 15));
        }
        else if (ddlTerms.val() == "3") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 30));
        }
        else if (ddlTerms.val() == "4") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 45));
        }
        else if (ddlTerms.val() == "5") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 60));
        }
        else if (ddlTerms.val() == "6") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 30));
        }
        else if (ddlTerms.val() == "7") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 90));
        }
        else if (ddlTerms.val() == "8") {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 180));
        }
        else if (ddlTerms.val() == "9") {
            txtDueDate.val(txtInvoiceDate.val());
        }
        else if (ddlTerms.val() == "10") //120 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 120));
        }
        else if (ddlTerms.val() == "11") //150 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 150));
        }
        else if (ddlTerms.val() == "12") //210 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 210));
        }
        else if (ddlTerms.val() == "13") //240 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 240));
        }
        else if (ddlTerms.val() == "14") //270 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 270));
        }
        else if (ddlTerms.val() == "15") //300 days
        {
            txtDueDate.val(addDays(txtInvoiceDate.val(), 300));
        }
        else if (ddlTerms.val() == "16") //net due on 10th
        {
            txtDueDate.val("");
        }
        else if (ddlTerms.val() == "17") //net due
        {
            txtDueDate.val("");
        }
        else if (ddlTerms.val() == "18") //Credit card
        {
            txtDueDate.val("");
        }
        Materialize.updateTextFields();
    }

</script>


